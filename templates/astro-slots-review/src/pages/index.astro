---
import siteData from '../data/site-data.json';

const { site, articles, categories, authors } = siteData;

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
const latestArticles = articles
  .filter(article => article.publishedAt)
  .sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime())
  .slice(0, 8);

// –ü–æ–ª—É—á–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const popularCategories = categories.slice(0, 6);
---

<!DOCTYPE html>
<html lang={site.config?.language || 'ru'}>
<head>
  <meta charset="utf-8">
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <meta name="viewport" content="width=device-width">
  <title>{site.name}</title>
  <meta name="description" content={site.description}>
  
  <!-- Google Analytics -->
  {site.analytics?.googleAnalytics && (
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${site.analytics.googleAnalytics}`}></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', '{site.analytics.googleAnalytics}');
    </script>
  )}
  
  <style>
    body {
      font-family: 'Inter', system-ui, sans-serif;
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
      color: #ffffff;
      line-height: 1.6;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
    }
    
    .header {
      background: rgba(0, 0, 0, 0.3);
      backdrop-filter: blur(10px);
      padding: 2rem 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .header h1 {
      font-size: 2.5rem;
      font-weight: 800;
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin: 0;
      text-align: center;
    }
    
    .header p {
      text-align: center;
      color: #a0a0a0;
      font-size: 1.1rem;
      margin: 0.5rem 0 0 0;
    }
    
    .main {
      padding: 3rem 0;
    }
    
    .articles-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 3rem;
    }
    
    .article-card {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 15px;
      overflow: hidden;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .article-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    }
    
    .article-image {
      width: 100%;
      height: 200px;
      object-fit: cover;
    }
    
    .article-content {
      padding: 1.5rem;
    }
    
    .article-title {
      font-size: 1.25rem;
      font-weight: 700;
      margin: 0 0 1rem 0;
      color: #ffffff;
    }
    
    .article-excerpt {
      color: #b0b0b0;
      margin: 0 0 1rem 0;
      line-height: 1.6;
    }
    
    .article-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 0.875rem;
      color: #808080;
    }
    
    .categories-section {
      margin-top: 3rem;
    }
    
    .categories-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 1rem;
    }
    
    .category-card {
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      padding: 1rem;
      border-radius: 10px;
      text-align: center;
      transition: transform 0.3s ease;
    }
    
    .category-card:hover {
      transform: scale(1.05);
    }
    
    .category-name {
      font-weight: 600;
      color: #ffffff;
    }
    
    .empty-state {
      text-align: center;
      padding: 3rem;
      color: #808080;
    }
    
    .empty-state h2 {
      font-size: 2rem;
      margin-bottom: 1rem;
      color: #ffffff;
    }
    
    h2 {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 2rem;
      text-align: center;
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
  </style>
</head>
<body>
  <header class="header">
    <div class="container">
      <h1>üé∞ {site.name}</h1>
      <p>{site.description}</p>
    </div>
  </header>

  <main class="main">
    <div class="container">
      {latestArticles.length > 0 ? (
        <>
          <h2>üéÆ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–∑–æ—Ä—ã —Å–ª–æ—Ç–æ–≤</h2>
          <div class="articles-grid">
            {latestArticles.map(article => (
              <article class="article-card">
                <a href={`/articles/${article.slug}`} style="text-decoration: none; color: inherit;">
                  {article.featured_image && (
                    <img 
                      src={article.featured_image} 
                      alt={article.title}
                      class="article-image"
                      loading="lazy"
                    />
                  )}
                  <div class="article-content">
                    <h3 class="article-title">{article.title}</h3>
                    {article.excerpt && (
                      <p class="article-excerpt">{article.excerpt}</p>
                    )}
                    <div class="article-meta">
                      <span>
                        {article.author?.name || 'Anonymous'}
                      </span>
                      <span>
                        {new Date(article.publishedAt).toLocaleDateString()}
                      </span>
                    </div>
                  </div>
                </a>
              </article>
            ))}
          </div>
        </>
      ) : (
        <div class="empty-state">
          <h2>üé∞ –û–±–∑–æ—Ä—ã —Å–ª–æ—Ç–æ–≤</h2>
          <p>–û–±–∑–æ—Ä—ã —Å–ª–æ—Ç–æ–≤ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.</p>
        </div>
      )}

      {popularCategories.length > 0 && (
        <div class="categories-section">
          <h2>üè∑Ô∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
          <div class="categories-grid">
            {popularCategories.map(category => (
              <div class="category-card">
                <div class="category-name">{category.name}</div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  </main>
</body>
</html> 