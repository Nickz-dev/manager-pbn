---
import siteData from '../../data/site-data.json';

export async function getStaticPaths() {
  const { articles } = siteData;
  
  return articles.map(article => ({
    params: { slug: article.slug },
    props: { article }
  }));
}

const { article } = Astro.props;
const { site, articles, categories } = siteData;

// Получаем связанные статьи
const relatedArticles = articles
  .filter(a => a.slug !== article.slug && a.categories?.some(cat => 
    article.categories?.some(articleCat => articleCat.slug === cat.slug)
  ))
  .slice(0, 3);

// Получаем категории статьи
const articleCategories = article.categories || [];

// Генерируем структурированные данные
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": article.title,
  "description": article.excerpt || article.title,
  "image": article.featured_image || `${site.domain}/images/default-article.jpg`,
  "author": {
    "@type": "Person",
    "name": article.author?.name || "Anonymous"
  },
  "publisher": {
    "@type": "Organization",
    "name": site.name,
    "url": `https://${site.domain}`
  },
  "datePublished": article.publishedAt,
  "dateModified": article.updatedAt || article.publishedAt,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": `https://${site.domain}/articles/${article.slug}`
  }
};

// Генерируем Open Graph данные
const ogData = {
  title: `${article.title} - ${site.name}`,
  description: article.excerpt || article.title,
  url: `https://${site.domain}/articles/${article.slug}`,
  type: 'article',
  site_name: site.name,
  image: article.featured_image || `${site.domain}/images/default-article.jpg`,
  published_time: article.publishedAt,
  modified_time: article.updatedAt || article.publishedAt,
  author: article.author?.name || "Anonymous"
};
---

<!DOCTYPE html>
<html lang={site.config?.language || 'en'}>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#10b981">
  
  <!-- Primary Meta Tags -->
  <title>{ogData.title}</title>
  <meta name="title" content={ogData.title}>
  <meta name="description" content={ogData.description}>
  <meta name="keywords" content={`${articleCategories.map(cat => cat.name).join(', ')}, gaming news, ${site.keywords?.join(', ') || ''}`}>
  <meta name="author" content={ogData.author}>
  <meta name="robots" content="index, follow">
  <meta name="language" content={site.config?.language || 'en'}>
  
  <!-- Canonical URL -->
  <link rel="canonical" href={ogData.url}>
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={ogData.type}>
  <meta property="og:url" content={ogData.url}>
  <meta property="og:title" content={ogData.title}>
  <meta property="og:description" content={ogData.description}>
  <meta property="og:image" content={ogData.image}>
  <meta property="og:site_name" content={ogData.site_name}>
  <meta property="og:locale" content={site.config?.language || 'en_US'}>
  <meta property="article:published_time" content={ogData.published_time}>
  <meta property="article:modified_time" content={ogData.modified_time}>
  <meta property="article:author" content={ogData.author}>
  {articleCategories.map(category => (
    <meta property="article:section" content={category.name}>
  ))}
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:url" content={ogData.url}>
  <meta property="twitter:title" content={ogData.title}>
  <meta property="twitter:description" content={ogData.description}>
  <meta property="twitter:image" content={ogData.image}>
  
  <!-- Favicon -->
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  
  <!-- Preload critical resources -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap"></noscript>
  
  <!-- Google Analytics -->
  {site.analytics?.googleAnalytics && (
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${site.analytics.googleAnalytics}`}></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', '{site.analytics.googleAnalytics}', {
        page_title: '{ogData.title}',
        page_location: '{ogData.url}'
      });
    </script>
  )}
  
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
  
  <style>
    :root {
      --primary-color: #10b981;
      --primary-hover: #059669;
      --accent-color: #3b82f6;
      --accent-hover: #2563eb;
      --bg-primary: #ffffff;
      --bg-secondary: #f8fafc;
      --bg-accent: #f1f5f9;
      --text-primary: #1e293b;
      --text-secondary: #475569;
      --text-muted: #64748b;
      --border-color: #e2e8f0;
      --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
      --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      background: var(--bg-primary);
      color: var(--text-primary);
      line-height: 1.6;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1rem;
    }
    
    .header {
      background: linear-gradient(135deg, var(--primary-color) 0%, var(--accent-color) 100%);
      color: white;
      padding: 1.5rem 0;
      position: sticky;
      top: 0;
      z-index: 100;
      box-shadow: var(--shadow-lg);
    }
    
    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 1rem;
    }
    
    .header h1 {
      margin: 0;
      font-size: 1.75rem;
      font-weight: 900;
      text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .header a {
      color: white;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      border: 1px solid rgba(255,255,255,0.2);
    }
    
    .header a:hover {
      background: rgba(255,255,255,0.1);
      border-color: rgba(255,255,255,0.4);
    }
    
    .main {
      padding: 3rem 0;
      flex: 1;
    }
    
    .article-container {
      max-width: 800px;
      margin: 0 auto;
    }
    
    .article-header {
      margin-bottom: 3rem;
      text-align: center;
    }
    
    .article-title {
      font-size: 3rem;
      font-weight: 900;
      margin: 0 0 1.5rem;
      color: var(--text-primary);
      line-height: 1.2;
      text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .article-meta {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 2rem;
      margin-bottom: 2rem;
      flex-wrap: wrap;
    }
    
    .meta-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--text-secondary);
      font-size: 0.875rem;
    }
    
    .author-avatar {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 0.875rem;
      font-weight: 600;
    }
    
    .article-image {
      width: 100%;
      max-height: 400px;
      object-fit: cover;
      border-radius: 16px;
      margin-bottom: 2rem;
      box-shadow: var(--shadow-lg);
    }
    
    .article-content {
      font-size: 1.125rem;
      line-height: 1.8;
      color: var(--text-primary);
    }
    
    .article-content h2 {
      font-size: 2rem;
      font-weight: 700;
      margin: 2rem 0 1rem;
      color: var(--text-primary);
    }
    
    .article-content h3 {
      font-size: 1.5rem;
      font-weight: 600;
      margin: 1.5rem 0 0.75rem;
      color: var(--text-primary);
    }
    
    .article-content p {
      margin-bottom: 1.5rem;
    }
    
    .article-content ul, .article-content ol {
      margin: 1.5rem 0;
      padding-left: 2rem;
    }
    
    .article-content li {
      margin-bottom: 0.5rem;
    }
    
    .article-content blockquote {
      border-left: 4px solid var(--primary-color);
      padding-left: 1.5rem;
      margin: 2rem 0;
      font-style: italic;
      color: var(--text-secondary);
      background: var(--bg-accent);
      padding: 1.5rem;
      border-radius: 8px;
    }
    
    .categories-tags {
      display: flex;
      gap: 0.5rem;
      margin: 2rem 0;
      flex-wrap: wrap;
      justify-content: center;
    }
    
    .category-tag {
      background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      font-size: 0.875rem;
      font-weight: 500;
      text-decoration: none;
      transition: all 0.3s ease;
    }
    
    .category-tag:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }
    
    .related-articles {
      margin-top: 4rem;
      padding-top: 3rem;
      border-top: 1px solid var(--border-color);
    }
    
    .related-articles h2 {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 2rem;
      text-align: center;
      color: var(--text-primary);
    }
    
    .related-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }
    
    .related-card {
      background: var(--bg-secondary);
      border-radius: 16px;
      overflow: hidden;
      box-shadow: var(--shadow-md);
      transition: all 0.3s ease;
      border: 1px solid var(--border-color);
    }
    
    .related-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }
    
    .related-image {
      width: 100%;
      height: 200px;
      object-fit: cover;
    }
    
    .related-content {
      padding: 1.5rem;
    }
    
    .related-title {
      font-size: 1.125rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: var(--text-primary);
      line-height: 1.4;
    }
    
    .related-excerpt {
      font-size: 0.875rem;
      color: var(--text-secondary);
      line-height: 1.6;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .footer {
      background: var(--bg-secondary);
      border-top: 1px solid var(--border-color);
      padding: 2rem 0;
      margin-top: 4rem;
      box-shadow: var(--shadow-sm);
    }
    
    .footer-content {
      text-align: center;
      color: var(--text-muted);
    }
    
    .footer a {
      color: var(--primary-color);
      text-decoration: none;
      transition: color 0.3s ease;
      font-weight: 500;
    }
    
    .footer a:hover {
      color: var(--primary-hover);
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
      .container {
        padding: 0 1rem;
      }
      
      .article-title {
        font-size: 2rem;
      }
      
      .article-meta {
        flex-direction: column;
        gap: 1rem;
      }
      
      .related-grid {
        grid-template-columns: 1fr;
      }
    }
    
    @media (max-width: 480px) {
      .article-title {
        font-size: 1.75rem;
      }
      
      .article-content {
        font-size: 1rem;
      }
    }
    
    /* Focus styles for accessibility */
    a:focus,
    button:focus {
      outline: 2px solid var(--primary-color);
      outline-offset: 2px;
    }
    
    /* Animations */
    @keyframes slideInUp {
      0% {
        opacity: 0;
        transform: translateY(40px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .article-header,
    .article-content,
    .related-articles {
      animation: slideInUp 0.8s ease-out;
    }
  </style>
</head>
<body>
  <header class="header">
    <div class="container">
      <div class="header-content">
        <h1><a href="/">🎮 {site.name}</a></h1>
        <a href="/">← Back to Home</a>
      </div>
    </div>
  </header>

  <main class="main">
    <div class="container">
      <article class="article-container">
        <header class="article-header">
          <h1 class="article-title">{article.title}</h1>
          
          <div class="article-meta">
            <div class="meta-item">
              <div class="author-avatar">
                {(article.author?.name || 'A').charAt(0).toUpperCase()}
              </div>
              <span>{article.author?.name || 'Anonymous'}</span>
            </div>
            
            <div class="meta-item">
              📅 {new Date(article.publishedAt).toLocaleDateString()}
            </div>
            
            {articleCategories.length > 0 && (
              <div class="meta-item">
                📂 {articleCategories.map(cat => cat.name).join(', ')}
              </div>
            )}
          </div>
          
          {article.featured_image && (
            <img 
              src={article.featured_image} 
              alt={article.title}
              class="article-image"
              loading="lazy"
            />
          )}
          
          {articleCategories.length > 0 && (
            <div class="categories-tags">
              {articleCategories.map(category => (
                <a href={`/categories/${category.slug}`} class="category-tag">
                  {category.name}
                </a>
              ))}
            </div>
          )}
        </header>

        <div class="article-content">
          {article.content ? (
            <div set:html={article.content}></div>
          ) : (
            <p>{article.excerpt || 'Content coming soon...'}</p>
          )}
        </div>
      </article>

      {relatedArticles.length > 0 && (
        <section class="related-articles">
          <h2>Related Articles</h2>
          <div class="related-grid">
            {relatedArticles.map(relatedArticle => (
              <article class="related-card">
                <a href={`/articles/${relatedArticle.slug}`} style="text-decoration: none; color: inherit;">
                  {relatedArticle.featured_image && (
                    <img 
                      src={relatedArticle.featured_image} 
                      alt={relatedArticle.title}
                      class="related-image"
                      loading="lazy"
                    />
                  )}
                  <div class="related-content">
                    <h3 class="related-title">{relatedArticle.title}</h3>
                    {relatedArticle.excerpt && (
                      <p class="related-excerpt">{relatedArticle.excerpt}</p>
                    )}
                  </div>
                </a>
              </article>
            ))}
          </div>
        </section>
      )}
    </div>
  </main>

  <footer class="footer">
    <div class="container">
      <div class="footer-content">
        <p>&copy; {new Date().getFullYear()} {site.name}. All rights reserved.</p>
        <p>
          <a href="/">Home</a> • 
          <a href="/categories">All Categories</a> • 
          <a href="/about">About</a>
        </p>
      </div>
    </div>
  </footer>
</body>
</html> 