---
import siteData from '../data/site-data.json';

const { site, articles, categories, authors } = siteData;

// Получаем последние статьи
const latestArticles = articles
  .filter(article => article.publishedAt)
  .sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime())
  .slice(0, 6);

// Получаем популярные категории (только из статей на сайте)
const popularCategories = categories.slice(0, 5);

// Генерируем структурированные данные
const structuredData = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": site.name,
  "url": `https://${site.domain}`,
  "description": site.description,
  "publisher": {
    "@type": "Organization",
    "name": site.name,
    "url": `https://${site.domain}`
  },
  "potentialAction": {
    "@type": "SearchAction",
    "target": `https://${site.domain}/search?q={search_term_string}`,
    "query-input": "required name=search_term_string"
  }
};

// Генерируем Open Graph данные
const ogData = {
  title: site.name,
  description: site.description,
  url: `https://${site.domain}`,
  type: 'website',
  site_name: site.name,
  image: site.og_image || `/images/default-og.jpg`
};
---

<!DOCTYPE html>
<html lang={site.config?.language || 'en'}>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#6366f1">
  
  <!-- Primary Meta Tags -->
  <title>{site.name} - {site.description}</title>
  <meta name="title" content={site.name}>
  <meta name="description" content={site.description}>
  <meta name="keywords" content={site.keywords?.join(', ') || ''}>
  <meta name="author" content={site.name}>
  <meta name="robots" content="index, follow">
  <meta name="language" content={site.config?.language || 'en'}>
  
  <!-- Canonical URL -->
  <link rel="canonical" href={`https://${site.domain}`}>
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={ogData.type}>
  <meta property="og:url" content={ogData.url}>
  <meta property="og:title" content={ogData.title}>
  <meta property="og:description" content={ogData.description}>
  <meta property="og:image" content={ogData.image}>
  <meta property="og:site_name" content={ogData.site_name}>
  <meta property="og:locale" content={site.config?.language || 'en_US'}>
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:url" content={ogData.url}>
  <meta property="twitter:title" content={ogData.title}>
  <meta property="twitter:description" content={ogData.description}>
  <meta property="twitter:image" content={ogData.image}>
  
  <!-- Favicon -->
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  
  <!-- Tailwind CSS (local build) -->
  <link rel="stylesheet" href="/src/styles/globals.css">
  
  <!-- Preload critical resources -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&display=swap"></noscript>
  
  <!-- Google Analytics -->
  {site.analytics?.googleAnalytics && (
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${site.analytics.googleAnalytics}`}></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', '{site.analytics.googleAnalytics}', {
        page_title: '{site.name}',
        page_location: '{ogData.url}'
      });
    </script>
  )}
  
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
    
    .header h1 {
      font-size: 3.5rem;
      font-weight: 800;
      margin-bottom: 1rem;
      color: white;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      letter-spacing: -1px;
    }
    
    .header p {
      font-size: 1.25rem;
      color: rgba(255, 255, 255, 0.9);
      max-width: 600px;
      margin: 0 auto;
      font-weight: 500;
    }
    
    .main {
      padding: 4rem 0;
    }
    
    .section-title {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 3rem;
      text-align: center;
      color: var(--text-primary);
      position: relative;
      letter-spacing: -0.5px;
    }
    
    .section-title::after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 4px;
      background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
      border-radius: 2px;
    }
    
    /* GRADIENT CARDS DESIGN */
    .articles-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 2rem;
      margin-bottom: 4rem;
    }
    
    .article-card-gradient {
      background: linear-gradient(135deg, var(--bg-secondary) 0%, var(--bg-accent) 100%);
      border-radius: 20px;
      overflow: hidden;
      box-shadow: var(--shadow-lg);
      transition: all 0.4s ease;
      border: 1px solid var(--border-color);
      position: relative;
    }
    
    .article-card-gradient::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(236, 72, 153, 0.1));
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 1;
    }
    
    .article-card-gradient:hover {
      transform: translateY(-8px);
      box-shadow: var(--shadow-xl);
      border-color: var(--primary-color);
    }
    
    .article-card-gradient:hover::before {
      opacity: 1;
    }
    
    .article-image-container {
      position: relative;
      width: 100%;
      height: 220px;
      overflow: hidden;
    }
    
    .article-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.4s ease;
    }
    
    .article-card-gradient:hover .article-image {
      transform: scale(1.1);
    }
    
    .article-image-placeholder {
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, var(--bg-accent) 0%, var(--border-color) 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--text-muted);
      font-size: 1.25rem;
      font-weight: 500;
    }
    
    .article-content {
      padding: 2rem;
      position: relative;
      z-index: 2;
    }
    
    .article-title {
      font-size: 1.375rem;
      font-weight: 700;
      margin-bottom: 1rem;
      color: var(--text-primary);
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .article-excerpt {
      color: var(--text-secondary);
      margin-bottom: 1.5rem;
      line-height: 1.6;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .article-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-top: 1.5rem;
      border-top: 1px solid var(--border-color);
    }
    
    .article-author {
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .author-avatar {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 0.875rem;
      font-weight: 600;
    }
    
    .author-info {
      display: flex;
      flex-direction: column;
    }
    
    .author-name {
      font-size: 0.875rem;
      font-weight: 600;
      color: var(--text-primary);
    }
    
    .article-date {
      font-size: 0.75rem;
      color: var(--text-muted);
    }
    
    .read-more-btn {
      background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      text-decoration: none;
      font-weight: 600;
      font-size: 0.875rem;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .read-more-btn:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }
    
    .categories-section {
      margin-bottom: 4rem;
    }
    
    .categories-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1.5rem;
    }
    
    .category-card {
      background: linear-gradient(135deg, var(--bg-secondary) 0%, var(--bg-accent) 100%);
      padding: 2rem 1.5rem;
      border-radius: 16px;
      text-align: center;
      box-shadow: var(--shadow-md);
      transition: all 0.3s ease;
      border: 1px solid var(--border-color);
      position: relative;
      overflow: hidden;
    }
    
    .category-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
    }
    
    .category-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-xl);
      border-color: var(--primary-color);
    }
    
    .category-card h3 {
      font-size: 1.25rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      color: var(--text-primary);
    }
    
    .category-card p {
      color: var(--text-secondary);
      font-size: 0.875rem;
    }
    
    .footer {
      background: var(--bg-secondary);
      border-top: 1px solid var(--border-color);
      padding: 3rem 0;
      margin-top: 4rem;
    }
    
    .footer-content {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
    }
    
    .footer-section h3 {
      font-size: 1.25rem;
      font-weight: 700;
      margin-bottom: 1rem;
      color: var(--text-primary);
    }
    
    .footer-section ul {
      list-style: none;
    }
    
    .footer-section li {
      margin-bottom: 0.5rem;
    }
    
    .footer-section a {
      color: var(--text-secondary);
      text-decoration: none;
      transition: color 0.3s ease;
    }
    
    .footer-section a:hover {
      color: var(--primary-color);
    }
    
    .footer-bottom {
      text-align: center;
      padding-top: 2rem;
      margin-top: 2rem;
      border-top: 1px solid var(--border-color);
      color: var(--text-muted);
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
      .header h1 {
        font-size: 2.5rem;
      }
      
      .header p {
        font-size: 1rem;
      }
      
      .section-title {
        font-size: 2rem;
      }
      
      .articles-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
      
      .article-content {
        padding: 1.5rem;
      }
      
      .article-title {
        font-size: 1.25rem;
      }
      
      .categories-grid {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
      }
      
      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
      }
    }
    
    @media (max-width: 480px) {
      .container {
        padding: 0 0.75rem;
      }
      
      .header {
        padding: 2rem 0;
      }
      
      .main {
        padding: 2rem 0;
      }
      
      .article-content {
        padding: 1rem;
      }
      
      .category-card {
        padding: 1.5rem 1rem;
      }
    }
    
    /* Loading states */
    .loading {
      opacity: 0.7;
      pointer-events: none;
    }
    
    /* Focus styles for accessibility */
    a:focus,
    button:focus {
      outline: 2px solid var(--primary-color);
      outline-offset: 2px;
    }
  </style>
</head>
<body>
  <header class="header">
    <div class="container">
      <div class="header-content">
        <h1>🃏 {site.name}</h1>
        <p>{site.description}</p>
      </div>
    </div>
  </header>

  <main class="main">
    <div class="container">
      {latestArticles.length > 0 ? (
        <>
          <h2 class="section-title">Latest Poker Strategies</h2>
          <div class="articles-grid">
            {latestArticles.map(article => (
              <article class="article-card-gradient">
                <a href={`/articles/${article.slug}`} style="text-decoration: none; color: inherit;">
                  <div class="article-image-container">
                    {article.featured_image ? (
                      <img 
                        src={article.featured_image} 
                        alt={article.title}
                        class="article-image"
                        loading="lazy"
                        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                      />
                    ) : null}
                    {!article.featured_image && (
                      <div class="article-image-placeholder">
                        🃏 No Image
                      </div>
                    )}
                  </div>
                  <div class="article-content">
                    <h3 class="article-title">{article.title}</h3>
                    {article.excerpt && (
                      <p class="article-excerpt">{article.excerpt}</p>
                    )}
                    <div class="article-meta">
                      <div class="article-author">
                        <div class="author-avatar">
                          {(article.author?.name || 'A').charAt(0).toUpperCase()}
                        </div>
                        <div class="author-info">
                          <span class="author-name">{article.author?.name || 'Anonymous'}</span>
                          <span class="article-date">
                            {new Date(article.publishedAt).toLocaleDateString()}
                          </span>
                        </div>
                      </div>
                      <span class="read-more-btn">
                        Read →
                      </span>
                    </div>
                  </div>
                </a>
              </article>
            ))}
          </div>
        </>
      ) : (
        <div style="text-align: center; padding: 4rem 0;">
          <h2>No articles available</h2>
          <p>Check back soon for new content!</p>
        </div>
      )}

      {popularCategories.length > 0 && (
        <div class="categories-section">
          <h2 class="section-title">Popular Categories</h2>
          <div class="categories-grid">
            {popularCategories.map(category => (
              <a href={`/categories/${category.slug}`} style="text-decoration: none; color: inherit;">
                <div class="category-card">
                  <h3>{category.name}</h3>
                  <p>Master {category.name.toLowerCase()} strategies</p>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}
    </div>
  </main>

  <footer class="footer">
    <div class="container">
      <div class="footer-content">
        <div class="footer-section">
          <h3>About {site.name}</h3>
          <p>{site.description}</p>
        </div>
        <div class="footer-section">
          <h3>Latest Articles</h3>
          <ul>
            {latestArticles.slice(0, 5).map(article => (
              <li><a href={`/articles/${article.slug}`}>{article.title}</a></li>
            ))}
          </ul>
        </div>
        <div class="footer-section">
          <h3>Categories</h3>
          <ul>
            {popularCategories.map(category => (
              <li><a href={`/categories/${category.slug}`}>{category.name}</a></li>
            ))}
          </ul>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; {new Date().getFullYear()} {site.name}. All rights reserved.</p>
      </div>
    </div>
  </footer>
</body>
</html> 