require('dotenv').config();
const axios = require('axios');

const STRAPI_URL = 'http://localhost:1337';
const API_TOKEN = process.env.STRAPI_API_TOKEN || '–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨';

const client = axios.create({
  baseURL: `${STRAPI_URL}/api`,
  headers: {
    'Authorization': `Bearer ${API_TOKEN}`,
    'Content-Type': 'application/json'
  }
});

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
const testData = {
  categories: [
    { 
      name: 'Casino', 
      slug: 'casino',
      color: '#FF6B6B',
      description: '–°—Ç–∞—Ç—å–∏ –æ –∫–∞–∑–∏–Ω–æ –∏ –∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö',
      icon: 'casino',
      sort_order: 1,
      is_active: true
    },
    { 
      name: 'Sports', 
      slug: 'sports',
      color: '#4ECDC4',
      description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      icon: 'sports',
      sort_order: 2,
      is_active: true
    },
    { 
      name: 'News', 
      slug: 'news',
      color: '#45B7D1',
      description: '–ù–æ–≤–æ—Å—Ç–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏',
      icon: 'news',
      sort_order: 3,
      is_active: true
    }
  ],
  
  authors: [
    { 
      name: 'John Doe',
      slug: 'john-doe',
      email: 'john@example.com', 
      bio: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∞–∑–∏–Ω–æ —Å 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º',
      avatar: 'https://example.com/john.jpg',
      website: 'https://johndoe.com',
      social_links: {
        twitter: '@johndoe',
        linkedin: 'john-doe'
      },
      specialization: 'casino',
      is_active: true,
      experience_years: 10
    },
    { 
      name: 'Jane Smith',
      slug: 'jane-smith',
      email: 'jane@example.com', 
      bio: '–ê–Ω–∞–ª–∏—Ç–∏–∫ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫',
      avatar: 'https://example.com/jane.jpg',
      website: 'https://janesmith.com',
      social_links: {
        twitter: '@janesmith',
        facebook: 'jane.smith'
      },
      specialization: 'sports',
      is_active: true,
      experience_years: 7
    }
  ],
  
  sites: [
    { 
      name: 'Casino Blog',
      slug: 'casino-blog-' + Date.now(),
      domain: 'casino-blog.com', // –í–ö–õ–Æ–ß–ï–ù–û - –ø–æ–ª–µ —Å–æ–∑–¥–∞–Ω–æ –≤ Strapi
      template: 'casino-premium',
      statuspbn: 'deployed',
      config: { 
        theme: 'dark', 
        language: 'en',
        features: ['live-chat', 'newsletter']
      },
      description: '–ü—Ä–µ–º–∏—É–º –±–ª–æ–≥ –æ –∫–∞–∑–∏–Ω–æ',
      language: 'en',
      timezone: 'UTC',
      analytics_id: 'GA-123456789',
      ssl_enabled: true,
      cdn_enabled: true,
      backup_enabled: true,
      deployed_at: new Date().toISOString(),
      last_build_at: new Date().toISOString()
    },
    {
      name: 'Sports News',
      slug: 'sports-news-' + Date.now(),
      domain: 'sports-news.com', // –í–ö–õ–Æ–ß–ï–ù–û - –ø–æ–ª–µ —Å–æ–∑–¥–∞–Ω–æ –≤ Strapi
      template: 'blog',
      statuspbn: 'deployed',
      config: { 
        theme: 'light', 
        language: 'en',
        features: ['comments', 'social-share']
      },
      description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      language: 'en',
      timezone: 'UTC',
      analytics_id: 'GA-987654321',
      ssl_enabled: true,
      cdn_enabled: false,
      backup_enabled: true,
      deployed_at: new Date().toISOString()
    }
  ]
};

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint)
async function createCategories() {
  console.log('\nüìã –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
  const categories = [];
  
  for (const cat of testData.categories) {
    try {
      const response = await client.post('/content-categories', {
        data: cat
      });
      categories.push(response.data.data);
      console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${cat.name}" —Å–æ–∑–¥–∞–Ω–∞ (ID: ${response.data.data.id})`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${cat.name}":`, error.response?.status);
      if (error.response?.data?.error?.details) {
        console.log('   –î–µ—Ç–∞–ª–∏:', error.response.data.error.details);
      }
    }
  }
  
  return categories;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–æ–≤ (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint)
async function createAuthors() {
  console.log('\nüë§ –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ—Ä–æ–≤...');
  const authors = [];
  
  for (const author of testData.authors) {
    try {
      const response = await client.post('/content-authors', {
        data: author
      });
      authors.push(response.data.data);
      console.log(`‚úÖ –ê–≤—Ç–æ—Ä "${author.name}" —Å–æ–∑–¥–∞–Ω (ID: ${response.data.data.id})`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∞ "${author.name}":`, error.response?.status);
      if (error.response?.data?.error?.details) {
        console.log('   –î–µ—Ç–∞–ª–∏:', error.response.data.error.details);
      }
    }
  }
  
  return authors;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤ (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint)
async function createSites() {
  console.log('\nüåê –°–æ–∑–¥–∞–µ–º —Å–∞–π—Ç—ã...');
  const sites = [];
  
  for (const site of testData.sites) {
    try {
      const response = await client.post('/pbn-sites', {
        data: site
      });
      sites.push(response.data.data);
      console.log(`‚úÖ –°–∞–π—Ç "${site.name}" —Å–æ–∑–¥–∞–Ω (ID: ${response.data.data.id})`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞ "${site.name}":`, error.response?.status);
      if (error.response?.data?.error?.details) {
        console.log('   –î–µ—Ç–∞–ª–∏:', error.response.data.error.details);
      }
    }
  }
  
  return sites;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π —Å –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏ (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint)
async function createArticlesWithRelations(categories, authors, sites) {
  console.log('\nüìÑ –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—å–∏ –° –û–¢–ù–û–®–ï–ù–ò–Ø–ú–ò...');
  
  const articles = [
    {
      title: '–õ—É—á—à–∏–µ –∫–∞–∑–∏–Ω–æ 2024: –ü–æ–ª–Ω—ã–π –æ–±–∑–æ—Ä',
      slug: 'best-casinos-2024-' + Date.now(),
      content: '<h1>–û–±–∑–æ—Ä –ª—É—á—à–∏—Ö –æ–Ω–ª–∞–π–Ω –∫–∞–∑–∏–Ω–æ</h1><p>–í —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Ç–æ–ø –∫–∞–∑–∏–Ω–æ 2024 –≥–æ–¥–∞...</p>',
      excerpt: '–¢–æ–ø –∫–∞–∑–∏–Ω–æ —ç—Ç–æ–≥–æ –≥–æ–¥–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º',
      featured_image: 'https://example.com/casino-2024.jpg',
      meta_title: '–õ—É—á—à–∏–µ –∫–∞–∑–∏–Ω–æ 2024 | –û–±–∑–æ—Ä –∏ —Ä–µ–π—Ç–∏–Ω–≥',
      meta_description: '–ü–æ–ª–Ω—ã–π –æ–±–∑–æ—Ä –∏ —Ä–µ–π—Ç–∏–Ω–≥ –ª—É—á—à–∏—Ö –æ–Ω–ª–∞–π–Ω –∫–∞–∑–∏–Ω–æ 2024 –≥–æ–¥–∞. –ë–æ–Ω—É—Å—ã, –ª–∏—Ü–µ–Ω–∑–∏–∏, –∏–≥—Ä—ã.',
      statusarticles: 'published',
      published: new Date().toISOString(),
      content_categories: [categories[0]?.id], // –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—è
      // author: authors[0]?.id,      // –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è
      // site: sites[0]?.id           // –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è
    },
    {
      title: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–≤–∫–∏: –ü–æ–ª–Ω—ã–π –≥–∏–¥ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
      slug: 'sports-betting-guide-' + Date.now(),
      content: '<h1>–ì–∏–¥ –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º —Å—Ç–∞–≤–∫–∞–º</h1><p>–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –Ω–∞—á–∞—Ç—å –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–ø–æ—Ä—Ç...</p>',
      excerpt: '–ö–∞–∫ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–ø–æ—Ä—Ç: –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
      featured_image: 'https://example.com/sports-betting.jpg',
      meta_title: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –≥–∏–¥ | –ö–∞–∫ –Ω–∞—á–∞—Ç—å',
      meta_description: '–ü–æ–ª–Ω—ã–π –≥–∏–¥ –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º —Å—Ç–∞–≤–∫–∞–º –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. –°—Ç—Ä–∞—Ç–µ–≥–∏–∏, —Å–æ–≤–µ—Ç—ã, –ª—É—á—à–∏–µ –±—É–∫–º–µ–∫–µ—Ä—ã.',
      statusarticles: 'published',
      published: new Date().toISOString(),
      content_categories: [categories[1]?.id], // –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—è
      // author: authors[1]?.id,      // –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è  
      // site: sites[1]?.id           // –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è
    },
    {
      title: '–ù–æ–≤–æ—Å—Ç–∏ –∏–≥–æ—Ä–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏',
      slug: 'gambling-industry-news-' + Date.now(),
      content: '<h1>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏</h1><p>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä...</p>',
      excerpt: '–°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–≥–æ—Ä–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏',
      featured_image: 'https://example.com/news.jpg',
      meta_title: '–ù–æ–≤–æ—Å—Ç–∏ –∫–∞–∑–∏–Ω–æ –∏ —Å—Ç–∞–≤–æ–∫',
      meta_description: '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –æ–Ω–ª–∞–π–Ω –∫–∞–∑–∏–Ω–æ –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫.',
      statusarticles: 'draft',
      content_categories: [categories[2]?.id], // –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—è
      // author: authors[0]?.id,      // –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è
      // site: sites[0]?.id           // –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è
    }
  ];
  
  for (const article of articles) {
    try {
      const response = await client.post('/content-articles', {
        data: article
      });
      console.log(`‚úÖ –°—Ç–∞—Ç—å—è "${article.title}" —Å–æ–∑–¥–∞–Ω–∞ (ID: ${response.data.data.id})`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ "${article.title}":`, error.response?.status);
      if (error.response?.data) {
        console.log('   –î–µ—Ç–∞–ª–∏:', JSON.stringify(error.response.data, null, 2));
      }
    }
  }
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å populate (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ endpoints)
async function testAPIWithPopulate() {
  console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –° POPULATE (–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã)...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—å–∏ –° —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const response = await client.get('/content-articles?populate=*');
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç API:');
    console.log(`–ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: ${response.data.data.length}`);
    
    if (response.data.data.length === 0) {
      console.log('‚ö†Ô∏è –°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
      return false;
    }
    
    response.data.data.forEach((article, index) => {
      try {
        const attrs = article.attributes || {};
        console.log(`\n${index + 1}. ${attrs.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`);
        console.log(`   üìù Slug: ${attrs.slug || '–ù–µ—Ç'}`);
        console.log(`   üìä Status: ${attrs.statusarticles || '–ù–µ—Ç'}`);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if (attrs.content_categories && attrs.content_categories.length > 0) {
          attrs.content_categories.forEach((cat, catIndex) => {
            console.log(`   üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è ${catIndex + 1}: ${cat.name || '–ù–µ—Ç'} (${cat.color || '–Ω–µ—Ç —Ü–≤–µ—Ç–∞'})`);
          });
        } else {
          console.log(`   üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ù–µ—Ç`);
        }
        
        console.log(`   üë§ –ê–≤—Ç–æ—Ä: [–ø–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ]`);
        console.log(`   üåê –°–∞–π—Ç: [–ø–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ]`);
        console.log(`   üìÑ Content: ${attrs.content ? attrs.content.substring(0, 50) + '...' : '–ù–µ—Ç'}`);
        console.log(`   üìù Excerpt: ${attrs.excerpt || '–ù–µ—Ç'}`);
      } catch (itemError) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–∞—Ç—å–∏ ${index + 1}:`, itemError.message);
      }
    });
    
    console.log('\nüéâ –ß–ê–°–¢–ò–ß–ù–´–ï –û–¢–ù–û–®–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢!');
    console.log('   ‚úÖ content_categories - —Å–≤—è–∑–∞–Ω–æ'); 
    console.log('   ‚ùì author - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è');
    console.log('   ‚ùì site - –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è');
    
    return true;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ API:', error.response?.status || error.message);
    if (error.response?.data) {
      console.log('   –î–µ—Ç–∞–ª–∏:', JSON.stringify(error.response.data, null, 2));
    }
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ endpoints)
async function checkCollections() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏–π...\n');
  
  const collections = [
    'content-categories',
    'content-authors', 
    'pbn-sites',
    'content-articles'
  ];
  const available = [];
  
  for (const collection of collections) {
    try {
      const response = await client.get(`/${collection}`);
      console.log(`‚úÖ ${collection} - –¥–æ—Å—Ç—É–ø–Ω–∞ (${response.data.data.length} –∑–∞–ø–∏—Å–µ–π)`);
      available.push(collection);
    } catch (error) {
      console.log(`‚ùå ${collection} - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (${error.response?.status})`);
    }
  }
  
  return available;
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
async function testIndividualCollections() {
  console.log('\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
  
  const tests = [
    { name: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', endpoint: '/content-categories' },
    { name: '–ê–≤—Ç–æ—Ä—ã', endpoint: '/content-authors' },
    { name: '–°–∞–π—Ç—ã', endpoint: '/pbn-sites' },
    { name: '–°—Ç–∞—Ç—å–∏', endpoint: '/content-articles' }
  ];
  
  for (const test of tests) {
    try {
      const response = await client.get(test.endpoint);
      const count = response.data.data.length;
      console.log(`‚úÖ ${test.name}: ${count} –∑–∞–ø–∏—Å–µ–π`);
      
      if (count > 0) {
        try {
          const sample = response.data.data[0].attributes || {};
          const keys = Object.keys(sample).slice(0, 3);
          console.log(`   –ü–æ–ª—è: ${keys.join(', ')}...`);
        } catch (sampleError) {
          console.log(`   –ü–æ–ª—è: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å`);
        }
      }
    } catch (error) {
      console.log(`‚ùå ${test.name}: –æ—à–∏–±–∫–∞ ${error.response?.status || error.message}`);
    }
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï STRAPI RELATIONS (–û–ë–ù–û–í–õ–ï–ù–û)\n');
  console.log('='.repeat(60));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
  if (API_TOKEN === '–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨') {
    console.log('‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ API —Ç–æ–∫–µ–Ω:');
    console.log('   set STRAPI_API_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω');
    console.log('   node test-strapi-relations.js');
    return;
  }
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const available = await checkCollections();
    if (available.length < 4) {
      console.log('\nüö® –ù–ï –í–°–ï –ö–û–õ–õ–ï–ö–¶–ò–ò –°–û–ó–î–ê–ù–´!');
      console.log('üìã –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ —Å—Ö–µ–º–µ STRAPI_RELATIONS_SCHEMA.md');
      console.log('üìÑ –ù—É–∂–Ω—ã: content-categories, content-authors, pbn-sites, content-articles');
      return;
    }
    
    console.log('\n' + '-'.repeat(60));
    
    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    await testIndividualCollections();
    
    console.log('\n' + '-'.repeat(60));
    
    // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø—É—Å—Ç—ã–µ
    console.log('\nüìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...');
    const categories = await createCategories();
    const authors = await createAuthors();
    const sites = await createSites();
    
    console.log('\n' + '-'.repeat(60));
    
    // 4. –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—å–∏ —Å –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏
    if (available.includes('content-articles')) {
      await createArticlesWithRelations(categories, authors, sites);
    } else {
      console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π - –∫–æ–ª–ª–µ–∫—Ü–∏—è content-articles –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    
    console.log('\n' + '-'.repeat(60));
    
    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å populate
    const success = await testAPIWithPopulate();
    
    console.log('\n' + '='.repeat(60));
    if (success) {
      console.log('üéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!');
      console.log('‚úÖ Relations –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
      console.log('‚úÖ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ endpoints –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è');
    } else {
      console.log('‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´:');
      console.log('‚ùì –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö');
      console.log('‚ùì –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –ø–æ–ª—è —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    }
    
  } catch (error) {
    console.log('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    if (error.response?.data) {
      console.log('üìÑ –î–µ—Ç–∞–ª–∏:', JSON.stringify(error.response.data, null, 2));
    }
  }
}

main().catch(console.error); 