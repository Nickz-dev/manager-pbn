const axios = require('axios');

const STRAPI_URL = 'http://localhost:1337';

async function createAdditionalCategories() {
  try {
    console.log('üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');

    const categories = [
      {
        name: '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞',
        slug: 'crypto',
        color: '#F7931A',
        description: '–°—Ç–∞—Ç—å–∏ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö –∏ –±–ª–æ–∫—á–µ–π–Ω–µ',
        icon: 'crypto',
        sort_order: 4
      },
      {
        name: '–§–∏–Ω–∞–Ω—Å—ã',
        slug: 'finance',
        color: '#2ECC71',
        description: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏',
        icon: 'finance',
        sort_order: 5
      }
    ];

    for (const category of categories) {
      console.log(`üìù –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${category.name}`);
      
      await axios.post(`${STRAPI_URL}/api/content-categories`, {
        data: category
      });

      await new Promise(resolve => setTimeout(resolve, 100));
    }

    console.log('‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
createAdditionalCategories(); 