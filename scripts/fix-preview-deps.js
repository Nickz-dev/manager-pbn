const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä–∞...\n');

// –ü—É—Ç–∏ –∫ —à–∞–±–ª–æ–Ω–∞–º
const templatesDir = path.join(__dirname, '../templates');
const templates = [
  'astro-pbn-blog',
  'astro-gaming-news', 
  'astro-poker-platform',
  'astro-slots-review',
  'astro-sports-betting',
  'casino-standard'
];

async function fixTemplateDeps(templateName) {
  const templatePath = path.join(templatesDir, templateName);
  
  if (!fs.existsSync(templatePath)) {
    console.log(`‚ö†Ô∏è  –®–∞–±–ª–æ–Ω ${templateName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }

  console.log(`\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${templateName}...`);
  
  const packageJsonPath = path.join(templatePath, 'package.json');
  const packageLockPath = path.join(templatePath, 'package-lock.json');
  const nodeModulesPath = path.join(templatePath, 'node_modules');

  try {
    // 1. –£–¥–∞–ª—è–µ–º node_modules –∏ package-lock.json
    if (fs.existsSync(nodeModulesPath)) {
      console.log(`   üóëÔ∏è  –£–¥–∞–ª—è–µ–º node_modules...`);
      await runCommand('rm', ['-rf', 'node_modules'], templatePath, '–£–¥–∞–ª–µ–Ω–∏–µ node_modules');
    }

    if (fs.existsSync(packageLockPath)) {
      console.log(`   üóëÔ∏è  –£–¥–∞–ª—è–µ–º package-lock.json...`);
      await runCommand('rm', ['-f', 'package-lock.json'], templatePath, '–£–¥–∞–ª–µ–Ω–∏–µ package-lock.json');
    }

    // 2. –û—á–∏—â–∞–µ–º npm –∫—ç—à
    console.log(`   üßπ –û—á–∏—â–∞–µ–º npm –∫—ç—à...`);
    await runCommand('npm', ['cache', 'clean', '--force'], templatePath, '–û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞');

    // 3. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log(`   üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
    await runCommand('npm', ['install'], templatePath, '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');

    // 4. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º rollup –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log(`   üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º rollup –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
    await runCommand('npm', ['install', '@rollup/rollup-linux-x64-gnu'], templatePath, '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ rollup');

    console.log(`   ‚úÖ ${templateName} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω`);

  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤ ${templateName}: ${error.message}`);
  }
}

function runCommand(command, args, cwd, name) {
  return new Promise((resolve, reject) => {
    console.log(`   üîÑ ${name}...`);
    
    const child = spawn(command, args, {
      cwd: cwd,
      stdio: 'pipe',
      shell: true
    });

    child.stdout.on('data', (data) => {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      const output = data.toString().trim();
      if (output.includes('added') || output.includes('removed') || output.includes('error')) {
        console.log(`      ${output}`);
      }
    });

    child.stderr.on('data', (data) => {
      const error = data.toString().trim();
      if (error && !error.includes('npm WARN')) {
        console.log(`      ‚ùå ${error}`);
      }
    });

    child.on('close', (code) => {
      if (code === 0) {
        console.log(`      ‚úÖ ${name} –∑–∞–≤–µ—Ä—à–µ–Ω`);
        resolve();
      } else {
        console.log(`      ‚ùå ${name} –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: ${code})`);
        reject(new Error(`Command failed with code ${code}`));
      }
    });

    child.on('error', (error) => {
      console.log(`      ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ${name}: ${error.message}`);
      reject(error);
    });
  });
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...\n');

  for (const template of templates) {
    await fixTemplateDeps(template);
  }

  console.log('\n‚úÖ –í—Å–µ —à–∞–±–ª–æ–Ω—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!');
  console.log('\nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏:');
  console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: http://185.232.205.247:4321');
  console.log('3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:');
  console.log('   - npm install --platform=linux --arch=x64');
  console.log('   - npm rebuild');
}

main().catch(error => {
  console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  process.exit(1);
}); 