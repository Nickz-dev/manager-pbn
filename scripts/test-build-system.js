const { generateAstroData } = require('./generate-astro-data');
const { buildAstroSite } = require('./build-astro');

async function testBuildSystem() {
  try {
    console.log('üß™ Testing build system...');
    
    // –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∞–π—Ç–∞
    const testSiteConfig = {
      name: "Test PBN Blog",
      description: "Test Private Blog Network",
      domain: "test-pbn-blog.com",
      template: "pbn-blog",
      keywords: ["test", "blog", "articles"],
      theme: "light",
      analytics: {
        googleAnalytics: ""
      }
    };
    
    console.log('üìä Step 1: Testing data generation...');
    const { siteData, imageStats } = await generateAstroData(testSiteConfig);
    
    console.log('‚úÖ Data generation completed');
    console.log(`üìä Generated ${siteData.articles.length} articles`);
    console.log(`üìÇ Generated ${siteData.categories.length} categories`);
    console.log(`üñºÔ∏è Downloaded ${imageStats.downloaded}/${imageStats.total} images`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–∞–≥–∏
    const articlesWithSlugs = siteData.articles.filter(article => article.slug);
    console.log(`üîó Generated slugs for ${articlesWithSlugs.length} articles`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const articlesWithImages = siteData.articles.filter(article => article.featured_image);
    console.log(`üñºÔ∏è Articles with images: ${articlesWithImages.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const uniqueCategories = new Set();
    siteData.articles.forEach(article => {
      if (article.categories) {
        article.categories.forEach(cat => uniqueCategories.add(cat.name));
      }
    });
    console.log(`üìÇ Unique categories from articles: ${uniqueCategories.size}`);
    
    console.log('\nüìã Sample article data:');
    if (siteData.articles.length > 0) {
      const sample = siteData.articles[0];
      console.log({
        title: sample.title,
        slug: sample.slug,
        hasImage: !!sample.featured_image,
        categories: sample.categories?.length || 0,
        excerpt: sample.excerpt?.substring(0, 100) + '...'
      });
    }
    
    console.log('\nüéâ Build system test completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Build system test failed:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testBuildSystem();
}

module.exports = { testBuildSystem }; 