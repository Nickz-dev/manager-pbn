const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
const templates = [
  'poker-platform',
  'sports-betting', 
  'gaming-news',
  'slots-review'
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function copyFile(source, destination) {
  try {
    const content = fs.readFileSync(source, 'utf8');
    fs.writeFileSync(destination, content);
    console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${destination}`);
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ${source}:`, error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
function ensureDir(dir) {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—É—Ç–µ—Ä–∞ –≤ —à–∞–±–ª–æ–Ω–µ
function fixFooter(templateName) {
  console.log(`\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞ –≤ —à–∞–±–ª–æ–Ω–µ: ${templateName}`);
  
  const indexPath = path.join(__dirname, '..', 'templates', templateName, 'src', 'pages', 'index.astro');
  
  if (fs.existsSync(indexPath)) {
    let content = fs.readFileSync(indexPath, 'utf8');
    
    // –ó–∞–º–µ–Ω—è–µ–º slice(0, 4) –Ω–∞ slice(0, 5) –¥–ª—è Latest Articles
    content = content.replace(
      /latestArticles\.slice\(0, 4\)/g,
      'latestArticles.slice(0, 5)'
    );
    
    // –¢–∞–∫–∂–µ –∑–∞–º–µ–Ω—è–µ–º –¥–ª—è categories –µ—Å–ª–∏ –µ—Å—Ç—å
    content = content.replace(
      /popularCategories\.slice\(0, 4\)/g,
      'popularCategories.slice(0, 5)'
    );
    
    fs.writeFileSync(indexPath, content);
    console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ—É—Ç–µ—Ä: ${indexPath}`);
  } else {
    console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${indexPath}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
function improveTemplate(templateName) {
  console.log(`\nüöÄ –£–ª—É—á—à–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: ${templateName}`);
  
  const templateDir = path.join(__dirname, '..', 'templates', templateName);
  const sourceDir = path.join(__dirname, '..', 'templates', 'casino-blog');
  
  if (!fs.existsSync(templateDir)) {
    console.log(`‚ùå –®–∞–±–ª–æ–Ω ${templateName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }
  
  // 1. –û–±–Ω–æ–≤–ª—è–µ–º package.json
  console.log('\nüì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json...');
  copyFile(
    path.join(sourceDir, 'package.json'),
    path.join(templateDir, 'package.json')
  );
  
  // 2. –û–±–Ω–æ–≤–ª—è–µ–º astro.config.mjs
  console.log('\n‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ astro.config.mjs...');
  copyFile(
    path.join(sourceDir, 'astro.config.mjs'),
    path.join(templateDir, 'astro.config.mjs')
  );
  
  // 3. –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  console.log('\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...');
  
  // robots.txt.ts
  ensureDir(path.join(templateDir, 'src', 'pages'));
  copyFile(
    path.join(sourceDir, 'src', 'pages', 'robots.txt.ts'),
    path.join(templateDir, 'src', 'pages', 'robots.txt.ts')
  );
  
  // sitemap.xml.ts
  copyFile(
    path.join(sourceDir, 'src', 'pages', 'sitemap.xml.ts'),
    path.join(templateDir, 'src', 'pages', 'sitemap.xml.ts')
  );
  
  // rss.xml.ts
  copyFile(
    path.join(sourceDir, 'src', 'pages', 'rss.xml.ts'),
    path.join(templateDir, 'src', 'pages', 'rss.xml.ts')
  );
  
  // site.webmanifest.ts
  copyFile(
    path.join(sourceDir, 'src', 'pages', 'site.webmanifest.ts'),
    path.join(templateDir, 'src', 'pages', 'site.webmanifest.ts')
  );
  
  // 4. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
  console.log('\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...');
  const staticFiles = [
    path.join(templateDir, 'public', 'robots.txt'),
    path.join(templateDir, 'public', 'site.webmanifest')
  ];
  
  staticFiles.forEach(file => {
    if (fs.existsSync(file)) {
      fs.unlinkSync(file);
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω: ${file}`);
    }
  });
  
  // 5. –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–±–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è)
  console.log('\nüè† –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
  const indexPath = path.join(templateDir, 'src', 'pages', 'index.astro');
  if (fs.existsSync(indexPath)) {
    let content = fs.readFileSync(indexPath, 'utf8');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ SEO —Ç–µ–≥–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!content.includes('meta name="viewport"')) {
      content = content.replace(
        '<meta charset="utf-8">',
        `<meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#3b82f6">`
      );
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º Google Fonts –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!content.includes('fonts.googleapis.com')) {
      content = content.replace(
        '</head>',
        `  <!-- Preload critical resources -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"></noscript>
  
</head>`
      );
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Ç–∞—Ç–µ–π
    content = content.replace(
      /latestArticles\.slice\(0, 4\)/g,
      'latestArticles.slice(0, 5)'
    );
    
    content = content.replace(
      /popularCategories\.slice\(0, 4\)/g,
      'popularCategories.slice(0, 5)'
    );
    
    fs.writeFileSync(indexPath, content);
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${indexPath}`);
  }
  
  // 6. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç–∞—Ç—å–∏ (–±–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è)
  console.log('\nüìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç—å–∏...');
  const articlePath = path.join(templateDir, 'src', 'pages', 'articles', '[slug].astro');
  if (fs.existsSync(articlePath)) {
    let content = fs.readFileSync(articlePath, 'utf8');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ SEO —Ç–µ–≥–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!content.includes('meta name="viewport"')) {
      content = content.replace(
        '<meta charset="utf-8">',
        `<meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#3b82f6">`
      );
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º Google Fonts –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!content.includes('fonts.googleapis.com')) {
      content = content.replace(
        '</head>',
        `  <!-- Preload critical resources -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"></noscript>
  
</head>`
      );
    }
    
    fs.writeFileSync(articlePath, content);
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç—å–∏: ${articlePath}`);
  }
  
  console.log(`\n‚úÖ –®–∞–±–ª–æ–Ω ${templateName} —É–ª—É—á—à–µ–Ω!`);
}

function fixHtmlLang() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—è—é –∏ –æ–±–Ω–æ–≤–ª—è—é html lang –∞—Ç—Ä–∏–±—É—Ç—ã...');
  
  const templates = [
    'astro-pbn-blog',
    'astro-slots-review', 
    'astro-gaming-news',
    'astro-sports-betting',
    'astro-poker-platform'
  ];
  
  templates.forEach(template => {
    const articlePath = path.join(__dirname, '..', 'templates', template, 'src', 'pages', 'articles', '[slug].astro');
    
    if (fs.existsSync(articlePath)) {
      let content = fs.readFileSync(articlePath, 'utf8');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π lang –∞—Ç—Ä–∏–±—É—Ç
      if (content.includes('<html lang={site.config?.language || \'en\'}>')) {
        console.log(`‚úÖ ${template}: html lang —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ`);
      } else if (content.includes('<html lang=')) {
        // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π lang –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π
        content = content.replace(
          /<html lang="[^"]*">/g,
          '<html lang={site.config?.language || \'en\'}>'
        );
        fs.writeFileSync(articlePath, content, 'utf8');
        console.log(`‚úÖ ${template}: –æ–±–Ω–æ–≤–ª–µ–Ω html lang –∞—Ç—Ä–∏–±—É—Ç`);
      } else {
        console.log(`‚ö†Ô∏è  ${template}: –Ω–µ –Ω–∞–π–¥–µ–Ω html lang –∞—Ç—Ä–∏–±—É—Ç`);
      }
    } else {
      console.log(`‚ùå ${template}: —Ñ–∞–π–ª [slug].astro –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  });
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–ª—É—á—à–µ–Ω–∏–µ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤...\n');
  
  templates.forEach(template => {
    improveTemplate(template);
  });

  fixHtmlLang();
  
  console.log('\nüéâ –í—Å–µ —à–∞–±–ª–æ–Ω—ã —É–ª—É—á—à–µ–Ω—ã!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å: npm install');
  console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–±–æ—Ä–∫—É: npm run build');
  console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç: npm run preview');
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main();
}

module.exports = { improveTemplate, fixFooter }; 