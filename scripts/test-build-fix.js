const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏...\n');

// –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
const templates = [
  'astro-casino-blog',
  'astro-slots-review', 
  'astro-gaming-news',
  'astro-sports-betting',
  'astro-poker-platform'
];

async function testBuild() {
  console.log('üî® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤...\n');
  
  let successCount = 0;
  let totalTemplates = templates.length;
  
  for (const template of templates) {
    const templatePath = path.join(__dirname, '../templates', template);
    
    if (!fs.existsSync(templatePath)) {
      console.log(`‚ùå –®–∞–±–ª–æ–Ω ${template} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      continue;
    }
    
    console.log(`\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º ${template}...`);
    
    try {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —à–∞–±–ª–æ–Ω–∞
      process.chdir(templatePath);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
      const packageJsonPath = path.join(templatePath, 'package.json');
      if (!fs.existsSync(packageJsonPath)) {
        console.log(`   ‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        continue;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ node_modules
      const nodeModulesPath = path.join(templatePath, 'node_modules');
      if (!fs.existsSync(nodeModulesPath)) {
        console.log(`   ‚ö†Ô∏è  node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
        try {
          execSync('npm install', { stdio: 'pipe', timeout: 300000 });
          console.log(`   ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã`);
        } catch (installError) {
          console.log(`   ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: ${installError.message}`);
          continue;
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      const categoriesDir = path.join(templatePath, 'src/pages/categories');
      const categoryPagePath = path.join(categoriesDir, '[slug].astro');
      
      if (!fs.existsSync(categoriesDir)) {
        console.log(`   ‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è categories –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...`);
        fs.mkdirSync(categoriesDir, { recursive: true });
      }
      
      if (!fs.existsSync(categoryPagePath)) {
        console.log(`   ‚ö†Ô∏è  –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...`);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        console.log(`   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞`);
      }
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º Astro
      console.log(`   üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º Astro...`);
      try {
        execSync('npx astro --version', { stdio: 'pipe', timeout: 10000 });
        console.log(`   ‚úÖ Astro —Ä–∞–±–æ—Ç–∞–µ—Ç`);
      } catch (astroError) {
        console.log(`   ‚ùå Astro –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${astroError.message}`);
        continue;
      }
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É
      console.log(`   üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É...`);
      try {
        execSync('npm run build', { stdio: 'pipe', timeout: 300000 }); // 5 –º–∏–Ω—É—Ç
        console.log(`   ‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const distPath = path.join(templatePath, 'dist');
        if (fs.existsSync(distPath)) {
          const files = fs.readdirSync(distPath);
          const htmlFiles = files.filter(f => f.endsWith('.html'));
          const categoryDirs = files.filter(f => {
            const categoryPath = path.join(distPath, f);
            return fs.statSync(categoryPath).isDirectory() && f === 'categories';
          });
          
          console.log(`   üìÑ –°–æ–±—Ä–∞–Ω–æ HTML —Ñ–∞–π–ª–æ–≤: ${htmlFiles.length}`);
          
          if (categoryDirs.length > 0) {
            const categoriesDistPath = path.join(distPath, 'categories');
            const categoryFiles = fs.readdirSync(categoriesDistPath);
            console.log(`   üìÇ –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categoryFiles.length}`);
          }
          
          if (htmlFiles.length > 0) {
            successCount++;
            console.log(`   ‚úÖ ${template} —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
          } else {
            console.log(`   ‚ö†Ô∏è  –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞, –Ω–æ HTML —Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç`);
          }
        } else {
          console.log(`   ‚ùå –ü–∞–ø–∫–∞ dist –Ω–µ —Å–æ–∑–¥–∞–Ω–∞`);
        }
        
      } catch (buildError) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: ${buildError.message}`);
      }
      
    } catch (error) {
      console.log(`   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    } finally {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
      process.chdir(path.join(__dirname, '..'));
    }
  }
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`);
  console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}/${totalTemplates}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${totalTemplates - successCount}/${totalTemplates}`);
  
  if (successCount === totalTemplates) {
    console.log('\nüéâ –í—Å–µ —à–∞–±–ª–æ–Ω—ã —Å–æ–±—Ä–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    return true;
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å');
    return false;
  }
}

async function testPreview() {
  console.log('\nüëÅÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é...');
  
  const templatePath = path.join(__dirname, '../templates/astro-gaming-news');
  
  if (!fs.existsSync(templatePath)) {
    console.log('‚ùå –®–∞–±–ª–æ–Ω astro-gaming-news –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ dist —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const distPath = path.join(templatePath, 'dist');
  if (!fs.existsSync(distPath)) {
    console.log('‚ùå dist –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å —Å–∞–π—Ç');
    return false;
  }
  
  try {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —à–∞–±–ª–æ–Ω–∞
    process.chdir(templatePath);
    
    console.log('   üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–≤—å—é –≤ —Ñ–æ–Ω–µ
    const { spawn } = require('child_process');
    const previewProcess = spawn('npm', ['run', 'preview', '--', '--port', '4321'], {
      stdio: 'pipe',
      shell: true
    });
    
    // –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç
    if (previewProcess.killed) {
      console.log('   ‚ùå –ü—Ä–µ–≤—å—é –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è');
      return false;
    }
    
    console.log('   ‚úÖ –ü—Ä–µ–≤—å—é –∑–∞–ø—É—Å—Ç–∏–ª—Å—è');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    previewProcess.kill('SIGTERM');
    
    return true;
    
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–≤—å—é: ${error.message}`);
    return false;
  } finally {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    process.chdir(path.join(__dirname, '..'));
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏...\n');
  
  try {
    const buildOk = await testBuild();
    const previewOk = await testPreview();
    
    console.log('\nüìä –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`   –°–±–æ—Ä–∫–∞: ${buildOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –ü—Ä–µ–≤—å—é: ${previewOk ? '‚úÖ' : '‚ùå'}`);
    
    if (buildOk && previewOk) {
      console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
      console.log('\nüîó –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:');
      console.log('   Preview: http://localhost:4321');
      console.log('   Next.js: http://localhost:3000');
    } else {
      console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã');
      console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: node scripts/fix-preview-deps-enhanced.js');
      console.log('2. –ò—Å–ø—Ä–∞–≤—å—Ç–µ VPS: node scripts/fix-vps-all-enhanced.js');
      console.log('3. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: node scripts/diagnose-vps-issues.js');
    }
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

main(); 