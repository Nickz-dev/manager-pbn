const { spawn, execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏...\n');

async function testBuild() {
  const templatePath = path.join(__dirname, '../templates/astro-pbn-blog');
  
  if (!fs.existsSync(templatePath)) {
    console.log('‚ùå –®–∞–±–ª–æ–Ω astro-pbn-blog –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return false;
  }
  
  try {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —à–∞–±–ª–æ–Ω–∞
    process.chdir(templatePath);
    
    console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    const hasTailwindConfig = fs.existsSync('tailwind.config.mjs');
    const hasAstroConfig = fs.existsSync('astro.config.mjs');
    const hasPackageJson = fs.existsSync('package.json');
    
    console.log(`   tailwind.config.mjs: ${hasTailwindConfig ? '‚úÖ' : '‚ùå'}`);
    console.log(`   astro.config.mjs: ${hasAstroConfig ? '‚úÖ' : '‚ùå'}`);
    console.log(`   package.json: ${hasPackageJson ? '‚úÖ' : '‚ùå'}`);
    
    if (!hasTailwindConfig || !hasAstroConfig || !hasPackageJson) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã');
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ astro.config.mjs
    const astroConfig = fs.readFileSync('astro.config.mjs', 'utf8');
    if (!astroConfig.includes('@astrojs/tailwind')) {
      console.log('‚ùå Astro –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç Tailwind –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é');
      return false;
    }
    
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...');
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const hasTailwind = packageJson.devDependencies && packageJson.devDependencies['@astrojs/tailwind'];
    const hasTailwindCSS = packageJson.devDependencies && packageJson.devDependencies['tailwindcss'];
    
    console.log(`   @astrojs/tailwind: ${hasTailwind ? '‚úÖ' : '‚ùå'}`);
    console.log(`   tailwindcss: ${hasTailwindCSS ? '‚úÖ' : '‚ùå'}`);
    
    if (!hasTailwind || !hasTailwindCSS) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules
    const hasNodeModules = fs.existsSync('node_modules');
    const hasAstroInNodeModules = fs.existsSync('node_modules/astro');
    const hasTailwindInNodeModules = fs.existsSync('node_modules/tailwindcss');
    
    console.log(`   node_modules: ${hasNodeModules ? '‚úÖ' : '‚ùå'}`);
    console.log(`   astro –≤ node_modules: ${hasAstroInNodeModules ? '‚úÖ' : '‚ùå'}`);
    console.log(`   tailwindcss –≤ node_modules: ${hasTailwindInNodeModules ? '‚úÖ' : '‚ùå'}`);
    
    if (!hasNodeModules || !hasAstroInNodeModules || !hasTailwindInNodeModules) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏');
      return false;
    }
    
    console.log('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É
    console.log('\nüî® –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É...');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testData = {
      site: {
        name: 'Test Site',
        description: 'Test Description',
        domain: 'test.com',
        template: 'astro-pbn-blog'
      },
      articles: [
        {
          id: 1,
          title: 'Test Article',
          slug: 'test-article',
          excerpt: 'Test excerpt',
          content: 'Test content',
          featured_image: '/src/assets/images/default-article.svg',
          publishedAt: new Date().toISOString()
        }
      ],
      categories: [],
      authors: []
    };
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const dataDir = path.join(templatePath, 'src', 'data');
    if (!fs.existsSync(dataDir)) {
      fs.mkdirSync(dataDir, { recursive: true });
    }
    
    fs.writeFileSync(
      path.join(dataDir, 'site-data.json'),
      JSON.stringify(testData, null, 2)
    );
    
    console.log('   üìÑ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
    try {
      execSync('npm run build', { 
        stdio: 'pipe',
        cwd: templatePath,
        timeout: 300000 // 5 –º–∏–Ω—É—Ç
      });
      console.log('   ‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const distPath = path.join(templatePath, 'dist');
      if (fs.existsSync(distPath)) {
        const files = fs.readdirSync(distPath);
        const htmlFiles = files.filter(f => f.endsWith('.html'));
        const cssFiles = files.filter(f => f.endsWith('.css'));
        
        console.log(`   üìÑ HTML —Ñ–∞–π–ª–æ–≤: ${htmlFiles.length}`);
        console.log(`   üé® CSS —Ñ–∞–π–ª–æ–≤: ${cssFiles.length}`);
        
        if (htmlFiles.length > 0 && cssFiles.length > 0) {
          console.log('   ‚úÖ –°–±–æ—Ä–∫–∞ —Å–æ–∑–¥–∞–ª–∞ HTML –∏ CSS —Ñ–∞–π–ª—ã');
          return true;
        } else {
          console.log('   ‚ö†Ô∏è  –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞, –Ω–æ —Ñ–∞–π–ª—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã');
          return false;
        }
      } else {
        console.log('   ‚ùå –ü–∞–ø–∫–∞ dist –Ω–µ —Å–æ–∑–¥–∞–Ω–∞');
        return false;
      }
      
    } catch (buildError) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: ${buildError.message}`);
      return false;
    }
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
    return false;
  } finally {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    process.chdir(path.join(__dirname, '..'));
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏...\n');
  
  const success = await testBuild();
  
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  if (success) {
    console.log('‚úÖ –°–±–æ—Ä–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    console.log('\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ VPS');
  } else {
    console.log('‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–±–æ—Ä–∫–æ–π');
    console.log('\nüîß –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:');
    console.log('   node scripts/fix-tailwind-config.js');
    console.log('   node scripts/fix-preview-deps.js');
  }
}

main().catch(error => {
  console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  process.exit(1);
}); 