const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ —Å VPS...\n');

// –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
const templates = [
  'casino-blog',
  'slots-review', 
  'gaming-news',
  'sports-betting',
  'poker-platform'
];

// VPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const VPS_HOST = '185.232.205.247';
const VPS_USER = 'root';
const VPS_PATH = '/var/www/pbn-manager';

function runSSHCommand(command) {
  const sshCommand = `ssh ${VPS_USER}@${VPS_HOST} "${command}"`;
  console.log(`   üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º: ${command}`);
  
  try {
    execSync(sshCommand, { stdio: 'inherit' });
    return true;
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ SSH: ${error.message}`);
    return false;
  }
}

function syncTemplate(templateName) {
  console.log(`\nüì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º ${templateName}...`);
  
  const localTemplatePath = path.join(__dirname, '../templates', templateName);
  const remoteTemplatePath = `${VPS_PATH}/templates/${templateName}`;
  
  if (!fs.existsSync(localTemplatePath)) {
    console.log(`   ‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω ${templateName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return false;
  }
  
  // 1. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ VPS –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  console.log(`   üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ VPS...`);
  if (!runSSHCommand(`mkdir -p ${VPS_PATH}/templates`)) {
    return false;
  }
  
  // 2. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ VPS
  console.log(`   üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ VPS...`);
  runSSHCommand(`rm -rf ${remoteTemplatePath}`);
  
  // 3. –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω –Ω–∞ VPS
  console.log(`   üì§ –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω –Ω–∞ VPS...`);
  const scpCommand = `scp -r "${localTemplatePath}" ${VPS_USER}@${VPS_HOST}:${VPS_PATH}/templates/`;
  
  try {
    execSync(scpCommand, { stdio: 'inherit' });
    console.log(`   ‚úÖ ${templateName} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –Ω–∞ VPS`);
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ${templateName}: ${error.message}`);
    return false;
  }
  
  // 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ VPS
  console.log(`   üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ VPS...`);
  if (!runSSHCommand(`cd ${remoteTemplatePath} && npm install`)) {
    console.log(`   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è ${templateName}`);
  }
  
  // 5. –°–æ–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω –Ω–∞ VPS
  console.log(`   üî® –°–æ–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω –Ω–∞ VPS...`);
  if (!runSSHCommand(`cd ${remoteTemplatePath} && npm run build`)) {
    console.log(`   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ ${templateName} –Ω–∞ VPS`);
  }
  
  return true;
}

function updateBuildScript() {
  console.log('\nüîß –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –Ω–∞ VPS...');
  
  const buildScriptContent = `const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');
const { generateAstroData } = require('./generate-astro-data');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º - —Ç–µ–ø–µ—Ä—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ
function getAstroDir(template) {
  const templateMap = {
    'casino-blog': 'astro-casino-blog',
    'slots-review': 'astro-slots-review', 
    'gaming-news': 'astro-gaming-news',
    'sports-betting': 'astro-sports-betting',
    'poker-platform': 'astro-poker-platform',
    'premium-casino': 'casino/premium'
  };
  
  const templateDir = templateMap[template] || 'astro-casino-blog';
  return path.join(__dirname, '../templates', templateDir);
}

function getDistDir(template) {
  return path.join(getAstroDir(template), 'dist');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ Astro
async function buildAstroSite(siteConfig) {
  try {
    console.log('üöÄ Starting Astro site build...');
    console.log(\`üìã Template: \${siteConfig.template}\`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø—É—Ç–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    const astroDir = getAstroDir(siteConfig.template);
    const distDir = getDistDir(siteConfig.template);
    
    console.log(\`üìÅ Astro directory: \${astroDir}\`);
    console.log(\`üìÅ Dist directory: \${distDir}\`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —à–∞–±–ª–æ–Ω–∞
    if (!fs.existsSync(astroDir)) {
      throw new Error(\`Template directory not found: \${astroDir}\`);
    }
    
    // –®–∞–≥ 1: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Strapi
    console.log('üìä Step 1: Generating data from Strapi...');
    const { imageStats } = await generateAstroData(siteConfig);
    
    // –®–∞–≥ 2: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é Astro
    console.log('üìÅ Step 2: Navigating to Astro directory...');
    process.chdir(astroDir);
    
    // –®–∞–≥ 3: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    console.log('üì¶ Step 3: Installing dependencies...');
    if (!fs.existsSync(path.join(astroDir, 'node_modules'))) {
      console.log('Installing npm dependencies...');
      execSync('npm install', { stdio: 'inherit' });
    }
    
    // –®–∞–≥ 4: –°–æ–±–∏—Ä–∞–µ–º Astro
    console.log('üî® Step 4: Building Astro site...');
    execSync('npm run build', { stdio: 'inherit' });
    
    // –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('‚úÖ Step 5: Checking build results...');
    const buildResults = checkBuildResults(distDir);
    
    console.log('üéâ Astro build completed successfully!');
    console.log(\`üìÅ Build directory: \${distDir}\`);
    console.log(\`üìä Build results:\`, buildResults);
    
    return {
      success: true,
      distPath: distDir,
      ...buildResults,
      imagesDownloaded: imageStats.downloaded,
      totalImages: imageStats.total
    };
    
  } catch (error) {
    console.error('‚ùå Astro build failed:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–±–æ—Ä–∫–∏
function checkBuildResults(distDir) {
  const results = {
    hasIndex: false,
    hasArticles: false,
    hasCategories: false,
    articleCount: 0,
    categoryCount: 0,
    files: []
  };
  
  if (!fs.existsSync(distDir)) {
    return results;
  }
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
  const files = getAllFiles(distDir);
  results.files = files;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ index.html
  results.hasIndex = files.some(file => file.endsWith('index.html'));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü —Å—Ç–∞—Ç–µ–π
  const articleFiles = files.filter(file => 
    file.includes('articles') && file.includes('index.html')
  );
  results.hasArticles = articleFiles.length > 0;
  results.articleCount = articleFiles.length;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const categoryFiles = files.filter(file => 
    file.includes('categories') && file.includes('index.html')
  );
  results.hasCategories = categoryFiles.length > 0;
  results.categoryCount = categoryFiles.length;
  
  return results;
}

// –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
function getAllFiles(dirPath, arrayOfFiles = []) {
  const files = fs.readdirSync(dirPath);
  
  files.forEach(file => {
    const fullPath = path.join(dirPath, file);
    if (fs.statSync(fullPath).isDirectory()) {
      arrayOfFiles = getAllFiles(fullPath, arrayOfFiles);
    } else {
      arrayOfFiles.push(fullPath);
    }
  });
  
  return arrayOfFiles;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
module.exports = { buildAstroSite };

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const siteConfig = {
    name: "PBN Blog",
    description: "Private Blog Network",
    domain: "pbn-blog.com",
    template: "pbn-blog",
    keywords: ["blog", "articles", "content"],
    theme: "light",
    analytics: {
      googleAnalytics: ""
    }
  };
  
  buildAstroSite(siteConfig)
    .then((result) => {
      if (result.success) {
        console.log('üéâ Build completed successfully!');
        process.exit(0);
      } else {
        console.error('‚ùå Build failed:', result.error);
        process.exit(1);
      }
    })
    .catch((error) => {
      console.error('‚ùå Build error:', error);
      process.exit(1);
    });
}`;
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ª–æ–∫–∞–ª—å–Ω–æ
  const localBuildScriptPath = path.join(__dirname, 'build-astro.js');
  fs.writeFileSync(localBuildScriptPath, buildScriptContent);
  
  // –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞ VPS
  const scpCommand = `scp "${localBuildScriptPath}" ${VPS_USER}@${VPS_HOST}:${VPS_PATH}/scripts/`;
  
  try {
    execSync(scpCommand, { stdio: 'inherit' });
    console.log('   ‚úÖ –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ VPS');
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ —Å–±–æ—Ä–∫–∏: ${error.message}`);
  }
}

function restartVPSServices() {
  console.log('\nüîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ VPS...');
  
  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Strapi
  console.log('   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Strapi...');
  runSSHCommand(`cd ${VPS_PATH}/strapi && pkill -f strapi && sleep 2 && npm run develop`);
  
  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Next.js
  console.log('   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Next.js...');
  runSSHCommand(`cd ${VPS_PATH} && pkill -f next && sleep 2 && npm run dev`);
  
  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä
  console.log('   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä...');
  runSSHCommand(`cd ${VPS_PATH} && pkill -f preview && sleep 2 && npm run preview`);
  
  console.log('‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã');
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —à–∞–±–ª–æ–Ω–æ–≤ —Å VPS...\n');
  
  let successCount = 0;
  let totalTemplates = templates.length;
  
  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω
  for (const template of templates) {
    if (syncTemplate(template)) {
      successCount++;
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏
  updateBuildScript();
  
  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
  restartVPSServices();
  
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:');
  console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}/${totalTemplates}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${totalTemplates - successCount}/${totalTemplates}`);
  
  if (successCount === totalTemplates) {
    console.log('\nüéâ –í—Å–µ —à–∞–±–ª–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å VPS!');
    console.log('\nüîó –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:');
    console.log(`   Strapi: http://${VPS_HOST}:1337`);
    console.log(`   Next.js: http://${VPS_HOST}:3000`);
    console.log(`   Preview: http://${VPS_HOST}:4321`);
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å');
    console.log('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPS –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É');
  }
}

main().catch(error => {
  console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  process.exit(1);
});