const axios = require('axios');

const STRAPI_URL = 'http://localhost:1337';

async function linkArticles() {
  try {
    console.log('üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∞–≤—Ç–æ—Ä–∞–º–∏...');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
    const articlesRes = await axios.get(`${STRAPI_URL}/api/content-articles`);
    const articles = articlesRes.data.data;

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categoriesRes = await axios.get(`${STRAPI_URL}/api/content-categories`);
    const categories = categoriesRes.data.data;

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–æ–≤
    const authorsRes = await axios.get(`${STRAPI_URL}/api/content-authors`);
    const authors = authorsRes.data.data;

    console.log(`üìÑ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: ${articles.length}`);
    console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);
    console.log(`üë§ –ù–∞–π–¥–µ–Ω–æ –∞–≤—Ç–æ—Ä–æ–≤: ${authors.length}`);

    // –°–≤—è–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∞–≤—Ç–æ—Ä–∞–º–∏
    for (let i = 0; i < articles.length; i++) {
      const article = articles[i];
      
      // –í—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
      let selectedCategory = null;
      if (article.title.toLowerCase().includes('–∫–∞–∑–∏–Ω–æ') || article.title.toLowerCase().includes('casino')) {
        selectedCategory = categories.find(cat => cat.name === 'Casino');
      } else if (article.title.toLowerCase().includes('—Å–ø–æ—Ä—Ç') || article.title.toLowerCase().includes('sport')) {
        selectedCategory = categories.find(cat => cat.name === 'Sports');
      } else {
        selectedCategory = categories.find(cat => cat.name === 'News');
      }

      // –í—ã–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      let selectedAuthor = null;
      if (selectedCategory && selectedCategory.name === 'Casino') {
        selectedAuthor = authors.find(auth => auth.specialization === 'casino');
      } else if (selectedCategory && selectedCategory.name === 'Sports') {
        selectedAuthor = authors.find(auth => auth.specialization === 'sports');
      } else {
        selectedAuthor = authors.find(auth => auth.specialization === 'general');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é
      const updateData = {
        content_categories: selectedCategory ? [selectedCategory.id] : [],
        content_author: selectedAuthor ? selectedAuthor.id : null
      };

      console.log(`üìù –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é "${article.title}":`);
      console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${selectedCategory ? selectedCategory.name : '–Ω–µ—Ç'}`);
      console.log(`   –ê–≤—Ç–æ—Ä: ${selectedAuthor ? selectedAuthor.name : '–Ω–µ—Ç'}`);

      await axios.put(`${STRAPI_URL}/api/content-articles/${article.documentId}`, {
        data: updateData
      });

      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 100));
    }

    console.log('‚úÖ –í—Å–µ —Å—Ç–∞—Ç—å–∏ —É—Å–ø–µ—à–Ω–æ —Å–≤—è–∑–∞–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ç–µ–π:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
linkArticles(); 