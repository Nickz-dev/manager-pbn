const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –£–ª—É—á—à–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä–∞...\n');

// –ü—É—Ç–∏ –∫ —à–∞–±–ª–æ–Ω–∞–º (–≤—Å–µ —Ç–µ–∫—É—â–∏–µ)
const templatesDir = path.join(__dirname, '../templates');
const templates = [
  'astro-pbn-blog',
  'astro-gaming-news', 
  'astro-poker-platform',
  'astro-slots-review',
  'astro-sports-betting',
  'casino-standard'
];

async function fixTemplateDeps(templateName) {
  const templatePath = path.join(templatesDir, templateName);
  
  if (!fs.existsSync(templatePath)) {
    console.log(`‚ö†Ô∏è  –®–∞–±–ª–æ–Ω ${templateName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }

  console.log(`\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${templateName}...`);
  
  try {
    // 1. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —à–∞–±–ª–æ–Ω–∞
    process.chdir(templatePath);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
    const packageJsonPath = path.join(templatePath, 'package.json');
    if (!fs.existsSync(packageJsonPath)) {
      console.log(`   ‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ${templateName}`);
      return;
    }
    
    // 3. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log(`   üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
    if (fs.existsSync('node_modules')) {
      await runCommand('rm', ['-rf', 'node_modules'], templatePath, '–£–¥–∞–ª–µ–Ω–∏–µ node_modules');
    }
    
    if (fs.existsSync('package-lock.json')) {
      await runCommand('rm', ['-f', 'package-lock.json'], templatePath, '–£–¥–∞–ª–µ–Ω–∏–µ package-lock.json');
    }

    // 4. –û—á–∏—â–∞–µ–º npm –∫—ç—à
    console.log(`   üßπ –û—á–∏—â–∞–µ–º npm –∫—ç—à...`);
    await runCommand('npm', ['cache', 'clean', '--force'], templatePath, '–û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞');

    // 5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log(`   üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
    await runCommand('npm', ['install'], templatePath, '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');

    // 6. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º rollup –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Linux
    console.log(`   üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º rollup –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Linux...`);
    await runCommand('npm', ['install', '@rollup/rollup-linux-x64-gnu'], templatePath, '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ rollup');

    // 7. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log(`   üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
    await runCommand('npm', ['rebuild'], templatePath, '–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');

    // 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ astro —Ä–∞–±–æ—Ç–∞–µ—Ç
    console.log(`   ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º Astro...`);
    await runCommand('npx', ['astro', '--version'], templatePath, '–ü—Ä–æ–≤–µ—Ä–∫–∞ Astro');

    // 9. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    console.log(`   üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É...`);
    try {
      await runCommand('npm', ['run', 'build'], templatePath, '–¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞');
      console.log(`      ‚úÖ –°–±–æ—Ä–∫–∞ ${templateName} —É—Å–ø–µ—à–Ω–∞`);
    } catch (buildError) {
      console.log(`      ‚ö†Ô∏è  –°–±–æ—Ä–∫–∞ ${templateName} –Ω–µ —É–¥–∞–ª–∞—Å—å, –Ω–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã`);
    }

    console.log(`   ‚úÖ ${templateName} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω`);

  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤ ${templateName}: ${error.message}`);
  } finally {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    process.chdir(path.join(__dirname, '..'));
  }
}

function runCommand(command, args, cwd, name) {
  return new Promise((resolve, reject) => {
    console.log(`   üîÑ ${name}...`);
    
    const child = spawn(command, args, {
      cwd: cwd,
      stdio: 'pipe',
      shell: true
    });

    child.stdout.on('data', (data) => {
      const output = data.toString().trim();
      if (output.includes('added') || output.includes('removed') || output.includes('error') || output.includes('built') || output.includes('rebuilt') || output.includes('successfully')) {
        console.log(`      ${output}`);
      }
    });

    child.stderr.on('data', (data) => {
      const error = data.toString().trim();
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è npm, –Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
      if (error && !error.includes('npm WARN') && !error.includes('Unknown cli config')) {
        console.log(`      ‚ùå ${error}`);
      }
    });

    child.on('close', (code) => {
      if (code === 0) {
        console.log(`      ‚úÖ ${name} –∑–∞–≤–µ—Ä—à–µ–Ω`);
        resolve();
      } else {
        console.log(`      ‚ùå ${name} –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: ${code})`);
        reject(new Error(`Command failed with code ${code}`));
      }
    });

    child.on('error', (error) => {
      console.log(`      ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ${name}: ${error.message}`);
      reject(error);
    });
  });
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...\n');

  let successCount = 0;
  let totalTemplates = templates.length;

  for (const template of templates) {
    try {
      await fixTemplateDeps(template);
      successCount++;
    } catch (error) {
      console.log(`   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ ${template}: ${error.message}`);
    }
  }

  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
  console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}/${totalTemplates}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${totalTemplates - successCount}/${totalTemplates}`);

  if (successCount === totalTemplates) {
    console.log('\nüéâ –í—Å–µ —à–∞–±–ª–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å');
  }

  console.log('\nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏:');
  console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: http://185.232.205.247:4321');
  console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–±–æ—Ä–∫—É —Å–∞–π—Ç–æ–≤');
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–≤—å—é –¥–ª—è –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤');
}

main().catch(error => {
  console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  process.exit(1);
}); 