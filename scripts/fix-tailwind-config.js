const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Tailwind CSS –≤–æ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–∞—Ö...\n');

// –°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
const templates = [
  'casino-blog',
  'gaming-news', 
  'poker-platform',
  'slots-review',
  'sports-betting'
];

// –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Tailwind
const tailwindConfig = `/** @type {import('tailwindcss').Config} */
export default {
  content: [
    './src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}',
    './src/**/*.astro',
    './src/pages/**/*.astro',
    './src/components/**/*.astro',
    './src/layouts/**/*.astro'
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#eff6ff',
          100: '#dbeafe',
          200: '#bfdbfe',
          300: '#93c5fd',
          400: '#60a5fa',
          500: '#3b82f6',
          600: '#2563eb',
          700: '#1d4ed8',
          800: '#1e40af',
          900: '#1e3a8a',
        },
        secondary: {
          50: '#f8fafc',
          100: '#f1f5f9',
          200: '#e2e8f0',
          300: '#cbd5e1',
          400: '#94a3b8',
          500: '#64748b',
          600: '#475569',
          700: '#334155',
          800: '#1e293b',
          900: '#0f172a',
        }
      },
      fontFamily: {
        sans: ['Inter', 'system-ui', 'sans-serif'],
        serif: ['Georgia', 'serif'],
      },
    },
  },
  plugins: [],
}`;

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Astro —Å Tailwind
const astroConfigTemplate = `import { defineConfig } from 'astro/config';
import tailwind from '@astrojs/tailwind';

export default defineConfig({
  integrations: [tailwind()],
  site: 'https://example.com', // –ë—É–¥–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
  base: '/',
  
  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–±–æ—Ä–∫–∏
  build: {
    assets: 'assets',
    inlineStylesheets: 'auto',
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  output: 'static',
  
  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è SEO
  trailingSlash: 'never',
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  server: {
    headers: {
      'X-Content-Type-Options': 'nosniff',
      'X-Frame-Options': 'DENY',
      'X-XSS-Protection': '1; mode=block',
      'Referrer-Policy': 'strict-origin-when-cross-origin',
      'Permissions-Policy': 'camera=(), microphone=(), geolocation=()',
    }
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  dev: {
    port: 4321,
    host: true,
  },
  
  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è CSS
  vite: {
    css: {
      devSourcemap: true,
    },
    build: {
      cssMinify: true,
      rollupOptions: {
        output: {
          manualChunks: {
            'vendor': ['astro']
          }
        }
      }
    }
  }
});`;

function fixTemplate(templateName) {
  const templatePath = path.join(__dirname, '../templates', templateName);
  
  if (!fs.existsSync(templatePath)) {
    console.log(`‚ö†Ô∏è  –®–∞–±–ª–æ–Ω ${templateName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return false;
  }
  
  console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${templateName}...`);
  
  try {
    // 1. –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º tailwind.config.mjs
    const tailwindConfigPath = path.join(templatePath, 'tailwind.config.mjs');
    fs.writeFileSync(tailwindConfigPath, tailwindConfig);
    console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω tailwind.config.mjs`);
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º astro.config.mjs
    const astroConfigPath = path.join(templatePath, 'astro.config.mjs');
    if (fs.existsSync(astroConfigPath)) {
      fs.writeFileSync(astroConfigPath, astroConfigTemplate);
      console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω astro.config.mjs`);
    } else {
      console.log(`   ‚ö†Ô∏è  astro.config.mjs –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ${templateName}`);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
    const packageJsonPath = path.join(templatePath, 'package.json');
    if (fs.existsSync(packageJsonPath)) {
      const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
      
      // –î–æ–±–∞–≤–ª—è–µ–º @astrojs/tailwind –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!packageJson.devDependencies['@astrojs/tailwind']) {
        packageJson.devDependencies['@astrojs/tailwind'] = '^5.0.0';
        console.log(`   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω @astrojs/tailwind –≤ devDependencies`);
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º tailwindcss –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!packageJson.devDependencies['tailwindcss']) {
        packageJson.devDependencies['tailwindcss'] = '^3.3.5';
        console.log(`   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω tailwindcss –≤ devDependencies`);
      }
      
      fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));
      console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω package.json`);
    }
    
    console.log(`   ‚úÖ ${templateName} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω`);
    return true;
    
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤ ${templateName}: ${error.message}`);
    return false;
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Tailwind CSS...\n');
  
  let successCount = 0;
  
  for (const template of templates) {
    const success = fixTemplate(template);
    if (success) successCount++;
  }
  
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
  console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}/${templates.length}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${templates.length - successCount}/${templates.length}`);
  
  if (successCount === templates.length) {
    console.log('\nüéâ –í—Å–µ —à–∞–±–ª–æ–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
    console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: node scripts/fix-preview-deps.js');
    console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–±–æ—Ä–∫—É: node scripts/diagnose-vps-issues.js');
    console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: node scripts/fix-vps-all-enhanced.js');
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å');
  }
}

main().catch(error => {
  console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  process.exit(1);
}); 