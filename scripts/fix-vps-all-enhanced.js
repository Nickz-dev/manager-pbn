const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –£–ª—É—á—à–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ VPS –¥–ª—è –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤...\n');

// –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
const templates = [
  'astro-casino-blog',
  'astro-slots-review', 
  'astro-gaming-news',
  'astro-sports-betting',
  'astro-poker-platform'
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
async function fixEnvironment() {
  console.log('üåç –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
  
  const envPath = path.join(__dirname, '../.env');
  if (!fs.existsSync(envPath)) {
    console.log('‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return false;
  }
  
  let envContent = fs.readFileSync(envPath, 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPS
  const useLocalStrapi = envContent.match(/USE_LOCAL_STRAPI=(.+)/)?.[1];
  const nextPublicUseLocal = envContent.match(/NEXT_PUBLIC_USE_LOCAL_STRAPI=(.+)/)?.[1];
  
  if (useLocalStrapi === 'true' || nextPublicUseLocal === 'true') {
    console.log('‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è VPS...');
    
    // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è VPS
    envContent = envContent.replace(/USE_LOCAL_STRAPI=true/g, 'USE_LOCAL_STRAPI=false');
    envContent = envContent.replace(/NEXT_PUBLIC_USE_LOCAL_STRAPI=true/g, 'NEXT_PUBLIC_USE_LOCAL_STRAPI=false');
    
    fs.writeFileSync(envPath, envContent);
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–ª—è VPS');
  } else {
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –¥–ª—è VPS');
  }
  
  return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Tailwind
async function fixTailwindConfig() {
  console.log('\nüé® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Tailwind...');
  
  for (const template of templates) {
    const templatePath = path.join(__dirname, '../templates', template);
    const tailwindConfigPath = path.join(templatePath, 'tailwind.config.mjs');
    
    if (!fs.existsSync(templatePath)) {
      console.log(`‚ö†Ô∏è  –®–∞–±–ª–æ–Ω ${template} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      continue;
    }
    
    if (!fs.existsSync(tailwindConfigPath)) {
      console.log(`‚ö†Ô∏è  tailwind.config.mjs –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ${template}`);
      continue;
    }
    
    try {
      let configContent = fs.readFileSync(tailwindConfigPath, 'utf8');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º content –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      if (!configContent.includes('content:') || configContent.includes('content: []')) {
        console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Tailwind –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è ${template}...`);
        
        const newContent = `/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}",
    "./src/pages/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}",
    "./src/components/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}",
    "./src/layouts/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}"
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}`;
        
        fs.writeFileSync(tailwindConfigPath, newContent);
        console.log(`‚úÖ Tailwind –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è ${template}`);
      } else {
        console.log(`‚úÖ Tailwind –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ${template} —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞`);
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Tailwind –¥–ª—è ${template}: ${error.message}`);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —à–∞–±–ª–æ–Ω–æ–≤
async function fixTemplateDependencies() {
  console.log('\nüì¶ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —à–∞–±–ª–æ–Ω–æ–≤...');
  
  for (const template of templates) {
    const templatePath = path.join(__dirname, '../templates', template);
    
    if (!fs.existsSync(templatePath)) {
      console.log(`‚ö†Ô∏è  –®–∞–±–ª–æ–Ω ${template} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      continue;
    }
    
    console.log(`\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${template}...`);
    
    try {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —à–∞–±–ª–æ–Ω–∞
      process.chdir(templatePath);
      
      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      console.log(`   üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
      if (fs.existsSync('node_modules')) {
        await runCommand('rm', ['-rf', 'node_modules'], templatePath, '–£–¥–∞–ª–µ–Ω–∏–µ node_modules');
      }
      
      if (fs.existsSync('package-lock.json')) {
        await runCommand('rm', ['-f', 'package-lock.json'], templatePath, '–£–¥–∞–ª–µ–Ω–∏–µ package-lock.json');
      }
      
      // –û—á–∏—â–∞–µ–º npm –∫—ç—à
      console.log(`   üßπ –û—á–∏—â–∞–µ–º npm –∫—ç—à...`);
      await runCommand('npm', ['cache', 'clean', '--force'], templatePath, '–û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      console.log(`   üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
      await runCommand('npm', ['install'], templatePath, '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º rollup –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Linux
      console.log(`   üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º rollup –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Linux...`);
      await runCommand('npm', ['install', '@rollup/rollup-linux-x64-gnu'], templatePath, '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ rollup');
      
      // –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      console.log(`   üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...`);
      await runCommand('npm', ['rebuild'], templatePath, '–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ astro —Ä–∞–±–æ—Ç–∞–µ—Ç
      console.log(`   ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º Astro...`);
      await runCommand('npx', ['astro', '--version'], templatePath, '–ü—Ä–æ–≤–µ—Ä–∫–∞ Astro');
      
      // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
      console.log(`   üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π...`);
      const categoriesDir = path.join(templatePath, 'src/pages/categories');
      const categoryPagePath = path.join(categoriesDir, '[slug].astro');
      
      if (!fs.existsSync(categoriesDir)) {
        fs.mkdirSync(categoriesDir, { recursive: true });
        console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è categories –¥–ª—è ${template}`);
      }
      
      if (!fs.existsSync(categoryPagePath)) {
        console.log(`   üìÑ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è ${template}...`);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        console.log(`   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è ${template}`);
      }
      
      console.log(`   ‚úÖ ${template} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω`);
      
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤ ${template}: ${error.message}`);
    } finally {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
      process.chdir(path.join(__dirname, '..'));
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–±–æ—Ä–∫–∏
async function testBuildSystem() {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–±–æ—Ä–∫–∏...');
  
  let successCount = 0;
  let totalTemplates = templates.length;
  
  for (const template of templates) {
    const templatePath = path.join(__dirname, '../templates', template);
    
    if (!fs.existsSync(templatePath)) {
      console.log(`‚ö†Ô∏è  –®–∞–±–ª–æ–Ω ${template} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      continue;
    }
    
    console.log(`\nüî® –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É ${template}...`);
    
    try {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —à–∞–±–ª–æ–Ω–∞
      process.chdir(templatePath);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º Astro
      console.log(`   üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º Astro...`);
      await runCommand('npx', ['astro', '--version'], templatePath, '–ü—Ä–æ–≤–µ—Ä–∫–∞ Astro');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É
      console.log(`   üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É...`);
      await runCommand('npm', ['run', 'build'], templatePath, '–¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const distPath = path.join(templatePath, 'dist');
      if (fs.existsSync(distPath)) {
        const files = fs.readdirSync(distPath);
        const htmlFiles = files.filter(f => f.endsWith('.html'));
        const categoryFiles = files.filter(f => f.includes('categories'));
        
        console.log(`   üìÑ –°–æ–±—Ä–∞–Ω–æ HTML —Ñ–∞–π–ª–æ–≤: ${htmlFiles.length}`);
        console.log(`   üìÇ –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categoryFiles.length}`);
        
        if (htmlFiles.length > 0) {
          successCount++;
          console.log(`   ‚úÖ –°–±–æ—Ä–∫–∞ ${template} —É—Å–ø–µ—à–Ω–∞`);
        } else {
          console.log(`   ‚ö†Ô∏è  –°–±–æ—Ä–∫–∞ ${template} –Ω–µ —Å–æ–∑–¥–∞–ª–∞ HTML —Ñ–∞–π–ª–æ–≤`);
        }
      } else {
        console.log(`   ‚ùå dist –ø–∞–ø–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è ${template}`);
      }
      
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ ${template}: ${error.message}`);
    } finally {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
      process.chdir(path.join(__dirname, '..'));
    }
  }
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏:`);
  console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}/${totalTemplates}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${totalTemplates - successCount}/${totalTemplates}`);
  
  return successCount === totalTemplates;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
async function restartServices() {
  console.log('\nüîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...');
  
  try {
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Strapi
    console.log('   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Strapi...');
    await runCommand('ssh', ['root@185.232.205.247', 'cd /var/www/pbn-manager/strapi && pkill -f strapi && sleep 2 && npm run develop'], '.', '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Strapi');
    
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Next.js
    console.log('   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Next.js...');
    await runCommand('ssh', ['root@185.232.205.247', 'cd /var/www/pbn-manager && pkill -f next && sleep 2 && npm run dev'], '.', '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Next.js');
    
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä
    console.log('   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–≤—å—é —Å–µ—Ä–≤–µ—Ä...');
    await runCommand('ssh', ['root@185.232.205.247', 'cd /var/www/pbn-manager && pkill -f preview && sleep 2 && npm run preview'], '.', '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–µ–≤—å—é');
    
    console.log('‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã');
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤: ${error.message}`);
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, args, cwd, name) {
  return new Promise((resolve, reject) => {
    console.log(`   üîÑ ${name}...`);
    
    const child = spawn(command, args, {
      cwd: cwd,
      stdio: 'pipe',
      shell: true
    });

    child.stdout.on('data', (data) => {
      const output = data.toString().trim();
      if (output.includes('added') || output.includes('removed') || output.includes('error') || output.includes('built') || output.includes('rebuilt') || output.includes('successfully')) {
        console.log(`      ${output}`);
      }
    });

    child.stderr.on('data', (data) => {
      const error = data.toString().trim();
      if (error && !error.includes('npm WARN') && !error.includes('Unknown cli config')) {
        console.log(`      ‚ùå ${error}`);
      }
    });

    child.on('close', (code) => {
      if (code === 0) {
        console.log(`      ‚úÖ ${name} –∑–∞–≤–µ—Ä—à–µ–Ω`);
        resolve();
      } else {
        console.log(`      ‚ùå ${name} –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: ${code})`);
        reject(new Error(`Command failed with code ${code}`));
      }
    });

    child.on('error', (error) => {
      console.log(`      ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ${name}: ${error.message}`);
      reject(error);
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ VPS...\n');
  
  try {
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    const envOk = await fixEnvironment();
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Tailwind –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    await fixTailwindConfig();
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —à–∞–±–ª–æ–Ω–æ–≤
    await fixTemplateDependencies();
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Å–±–æ—Ä–∫–∏
    const buildOk = await testBuildSystem();
    
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
    await restartServices();
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
    console.log(`   –û–∫—Ä—É–∂–µ–Ω–∏–µ: ${envOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –°–±–æ—Ä–∫–∞: ${buildOk ? '‚úÖ' : '‚ùå'}`);
    
    if (envOk && buildOk) {
      console.log('\nüéâ VPS —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!');
      console.log('\nüîó –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:');
      console.log('   Strapi: http://185.232.205.247:1337');
      console.log('   Next.js: http://185.232.205.247:3000');
      console.log('   Preview: http://185.232.205.247:4321');
    } else {
      console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å');
    }
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

main(); 