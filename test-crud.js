const axios = require('axios')

const BASE_URL = 'http://localhost:3000/api'

async function testCRUD() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Å–∞–π—Ç–∞–º–∏...\n')
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤...')
    const sitesResponse = await axios.get(`${BASE_URL}/sites`)
    console.log('‚úÖ –°–∞–π—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', sitesResponse.data.sites.length, '—à—Ç.')
    
    if (sitesResponse.data.sites.length === 0) {
      console.log('‚ùå –ù–µ—Ç —Å–∞–π—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
      return
    }
    
    const testSite = sitesResponse.data.sites[0]
    console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–π —Å–∞–π—Ç:', testSite.name, '(ID:', testSite.documentId, ')\n')
    
    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞...')
    const updateData = {
      name: testSite.name + ' (–æ–±–Ω–æ–≤–ª–µ–Ω)',
      statuspbn: 'draft'
    }
    
    const updateResponse = await axios.put(`${BASE_URL}/sites/${testSite.documentId}`, updateData)
    console.log('‚úÖ –°–∞–π—Ç –æ–±–Ω–æ–≤–ª–µ–Ω:', updateResponse.data.message)
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å
    console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...')
    const checkResponse = await axios.get(`${BASE_URL}/sites/${testSite.documentId}`)
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ:', checkResponse.data.site.name)
    
    // 4. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è
    console.log('4Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏...')
    const revertData = {
      name: testSite.name,
      statuspbn: testSite.statuspbn
    }
    
    const revertResponse = await axios.put(`${BASE_URL}/sites/${testSite.documentId}`, revertData)
    console.log('‚úÖ –ò–º—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ:', revertResponse.data.message)
    
    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ —Å–∞–π—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç)
    if (testSite.statuspbn === 'deployed') {
      console.log('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ZIP...')
      try {
        const downloadResponse = await axios.get(`${BASE_URL}/sites/${testSite.documentId}/download`, {
          responseType: 'stream'
        })
        console.log('‚úÖ ZIP —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è')
        console.log('üì¶ –†–∞–∑–º–µ—Ä:', downloadResponse.headers['content-length'], '–±–∞–π—Ç')
      } catch (error) {
        console.log('‚ö†Ô∏è ZIP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –ø–∞–ø–∫–∏ dist):', error.response?.data?.error || error.message)
      }
    } else {
      console.log('5Ô∏è‚É£ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ ZIP –ø—Ä–æ–ø—É—â–µ–Ω–æ (—Å–∞–π—Ç –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç)')
    }
    
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message)
  }
}

testCRUD() 